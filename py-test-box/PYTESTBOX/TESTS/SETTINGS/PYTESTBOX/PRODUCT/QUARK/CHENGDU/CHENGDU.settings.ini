; -----------------------------------------------------------------------------
; Python Test Harness
; -----------------------------------------------------------------------------
;
; [Summary]  Chengdu specific features
;
; [Author] Vinodh Selvaraj
;
; [DateTime]   2024/01/11
; -----------------------------------------------------------------------------

[PRODUCT]
ProductReference = 'RBK95'
ProductID = 'C548 AB07'
TransportID = ('B38F',)
BluetoothPID = 'B38F'
EQuadPID = 'B38F'
IsMice = False
IsGaming = False

[PRODUCT/DEBOUNCE]
Enabled = True
Version_1 = True
0PercentMakeDebounceUs = 4000
100PercentMakeDebounceUs = 8000
MakeBlindWindowUs = 40000
0PercentBreakDebounceUs = 4000
100PercentBreakDebounceUs = 8000
BreakBlindWindowUs = 40000
100PercentMakeDeepSleepUs = 24000

[PRODUCT/DEVICE]
MaxWaitSleep = 10
MaxWaitDeepSleep = 7200
KeyboardType = 'membrane'
NbHosts = 3

[PRODUCT/DEVICE/BATTERY]
MaximumVoltage = 3.1
NominalVoltage = 3
CutOffVoltage = 2.0

[PRODUCT/DEVICE/CONNECTION_SCHEME]
Enabled = True
MultipleChannels = True
MultipleEasySwitchButtons = True

[PRODUCT/DEVICE/CONNECTION_SCHEME/BLE_PRO_CS]
Enabled = True
Version_0 = True
SafePrePairedReceiver = True
BLEServiceChangeSupport = True

[PRODUCT/DEVICE/CONNECTION_SCHEME/DEVICE_RECOVERY]
Enabled = True
RecoveryKeysVariant = "kdb-recovery-keys-make_reset_kdb-recovery-keys-break"

[PRODUCT/DEVICE/EVT_AUTOMATION/TYPING_TEST]
Enabled = True
CreateGoogleSheet = True
RunTypingTestCompleteEVT = True
EVTReportSpreadsheetID = "1-m9crrBTY8h7zru-utA6fr9ABnAvkLN39ZOhScCjiuM"

[PRODUCT/DEVICE/FN_LOCK]
PWS_UX_V1_3 = True

[PRODUCT/NVS_CHUNK_IDS]
Enabled = True

[PRODUCT/LATENCY/SWITCH_LATENCY]
Enabled = True
# Switch latency on BLE Pro or BLE pro in run mode in us
MinSwitchLatencyRunMode = 200
AvgPressLatencyRunMode = 16000
Percentile95PressLatencyRunMode = 32000
AvgReleaseLatencyRunMode = 16000
Percentile95ReleaseLatencyRunMode = 32000
# Switch latency time on BLE or BLE Pro or LS2 in sleep mode in us
MinSwitchLatencySleepMode = 200
AvgSwitchLatencySleepMode = 16000
Percentile95SwitchLatencySleepMode = 32000
# Switch latency time on BLE or BLE Pro or LS2 in deep sleep mode in us
MinSwitchLatencyDeepSleepMode = 10000
AvgSwitchLatencyDeepSleepMode = 120000
Percentile95SwitchLatencyDeepSleepMode = 240000

[PRODUCT/USB_COMMUNICATION]
SetIdleSupported = True

[PRODUCT/PROTOCOLS]
DefaultProtocol = "BLE_PRO"

[PRODUCT/PROTOCOLS/BLE_PRO]
Enabled = True
Version_1 = False
Version_2 = True

[PRODUCT/PROTOCOLS/BLE]
Enabled = True
ChromeSupport = True
OsDetection = True
Software_Revision = ('00590A0126',)

[PRODUCT/PROTOCOLS/BLE/ADVERTISING]
SwiftPairCapability = True
TxPower = 0x04
AuthenticationType = 0x01
DeviceType = 0x01
BootloaderReconnectionAdvertisingCompleteWindowS = 40
BootloaderReconnectionAdvertisingFirstHdcSubWindowS = 5
BootloaderReconnectionAdvertisingHdcSubWindowS = 1.28
BootloaderReconnectionAdvertisingLcdSubWindowS = 15
BootloaderReconnectionAdvertisingLcdIntervalMs = 20
BootloaderRecoveryAdvertisingCompleteWindowS = 40

[PRODUCT/FEATURES/KEYBOARD]
# Ghost key tests are suppressed due to a known limitation in tests(especially in KAVALON based devices)
GhostKeys = False
PlayPauseDoublePress = True

# Feature 0x0000 version 2
[PRODUCT/FEATURES/IMPORTANT/ROOT]
Enabled = True
Version_1 = False
Version_2 = True
ProtocolNum = [04]
TargetSW = [05]

# Feature 0x0001 version 2
[PRODUCT/FEATURES/IMPORTANT/FEATURE_SET]
Enabled = True
Version_1 = False
Version_2 = True
FeatureCountInBLE = 0x1F
BootloaderFeatureCountInBLE = 0x05

# Feature 0x0003 version 7
[PRODUCT/FEATURES/COMMON/DEVICE_INFORMATION]
Enabled = True
Version_7 = True
EntityCount = 4
TransportUsb = False
TransportEQuad = False
TransportBTLE = True
TransportBT = False
ModelId = 'B38F00000000'
ExtendedModelId = 0
CapabilitiesSerialNumber = True
FwType = ('01', '00', '05', '02')
FwPrefix = ('BL2', 'RBK', '', 'HW')
FwNumber = ('34', '95', '00', '00')
Revision = ('00', '00', '00', '00')
Build = ('0007', '0007', '0126', '0000')
BootLoaderBuild = ('0007', '0007', '0126', '0000')
TransportId = ('B38F', 'B38F', '0000', '0000')
BootLoaderTransportId = ('B38F', '0000', '0000', '0000')
UnitId = ('E7341431',)

# Feature 0x0005 version 5
[PRODUCT/FEATURES/COMMON/DEVICE_TYPE_AND_NAME]
Enabled = True
Version_5 = True
MarketingName = 'Keyboard Chengdu'
DeviceType = 0

# Feature 0x0007 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_FRIENDLY_NAME]
Enabled = True
Version_0 = True
NameMaxLength = 14

# Feature 0x0011 version 0
[PRODUCT/FEATURES/COMMON/PROPERTY_ACCESS]
Enabled = True
Version_0 = True
SwAccessibleProperties = ('EXTENDED_MODEL_ID', 'KEYBOARD_LAYOUT', 'SERIAL_NUMBER', 'BLE_GAP_APP_NAME', 'BLE_DIS_APP_PID', 'HIDPP_DEVICE_NAME', 'HW_VERSION', 'SOFTWARE_EXTRA_INFORMATION')
SwAccessiblePropertiesSizes = ('HIDPP_DEVICE_NAME:50', 'BLE_GAP_APP_NAME:14', 'SOFTWARE_EXTRA_INFORMATION:16')

# Feature 0x0020 version 0 (Enabled in QUARK.settings.ini)

# Feature 0x00C2
[PRODUCT/FEATURES/COMMON/DFU_CONTROL]
Enabled = False

# Feature 0x00C3 version 1
[PRODUCT/FEATURES/COMMON/SECURE_DFU_CONTROL]
Enabled = True
Version_1 = True
DfuControlTimeout = 30
DfuControlActionType = 1
DfuControlActionData = 0x000000

# Feature 0x00D0 version 3
[PRODUCT/FEATURES/COMMON/DFU]
Enabled = True
Version_3 = True
MagicString = "RBK95_D0A"
UpgradableEntityTypes = ('0', '5')
ErrorLevel = 3
HexFileName = "chengdu_prod.hex"
SoftDeviceDfuFileName = "chengdu_s112_nrf52810_limit.dfu"
FlashWriteVerify = False
VerifyCmd3DoneAfterCmd1And2 = False
VerifyFlag = False
LowestApplicationAddress = 0x00019000
HighestApplicationAddress = 0x00033000
AdditionalAuthentication = True
EncryptCapabilities = ('3',)
DfuStartSecurLvl = 0

# Feature 0x1004 version 5
[PRODUCT/FEATURES/COMMON/UNIFIED_BATTERY]
Enabled = True
Version_5 = True
SupportedLevels = ('100', '50', '30', '5')
CapabilitiesFlags = ('0', '1', '0', '0')
DischargeSOCmV = ('3100', '2900', '2785', '2720', '2660', '2615', '2565', '2550', '2530', '2490', '2475', '2465', '2425', '2390', '2365', '2345', '2280', '2225', '2150', '2060', '2000')
RechargeSOCmV = ()
StateOfChargeStep = 5

# Feature 0x1602 version 0
[PRODUCT/FEATURES/COMMON/PASSWORD_AUTHENTICATION]
Enabled = True
Version_0 = True
ConstantCredentials = True
FullAuthentication = False
SupportLongPassword = False

# Feature 0x1802 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_RESET]
Enabled = True

# Feature 0x1803 version 1
[PRODUCT/FEATURES/COMMON/GPIO_ACCESS]
Enabled = True
Version_1 = True
NumberOfPorts = 1
GpioInputMask = ('0F700000',)
GpioInputValue = ('00000000',)
GpioOutputMask = ('F08FFFFF',)
GpioOutputValue = ('F00FFFFF',)
GpioUnusedMask = ('00000000',)
GpioForbiddenMask = ('00000000',)

# Feature 0x1805 version 0
[PRODUCT/FEATURES/COMMON/OOB_STATE]
Enabled = True
Version_0 = True

# Feature 0x1807 version 3
[PRODUCT/FEATURES/COMMON/CONFIGURABLE_PROPERTIES]
Enabled = True
Version_3 = True
SupportedProperties = ('EXTENDED_MODEL_ID', 'KEYBOARD_LAYOUT', 'BLE_GAP_ADV_OUTPUT_POWER', 'SERIAL_NUMBER', 'HIDPP_DEVICE_NAME', 'USB_VID', 'BLE_GAP_APP_NAME', 'BLE_GAP_BL_ADV_NAME_SIZE', 'BLE_GAP_APP_ADV_NAME_SIZE', 'BLE_GAP_BL_SR_NAME_SIZE', 'BLE_GAP_APP_SR_NAME_SIZE', 'BLE_DIS_BL_PID', 'BLE_DIS_APP_PID', 'BLE_DIS_MANUFACTURER_NAME', 'BLE_DIS_BL_MODEL_NUMBER', 'BLE_DIS_APP_MODEL_NUMBER', 'HW_VERSION', 'SOFTWARE_EXTRA_INFORMATION', 'DISABLE_EASY_PAIRING')
SpecificPropertiesSizes = ('HIDPP_DEVICE_NAME:50', 'BLE_GAP_APP_NAME:14', 'BLE_DIS_MANUFACTURER_NAME:32', 'BLE_DIS_BL_MODEL_NUMBER:32', 'BLE_DIS_APP_MODEL_NUMBER:32', 'SOFTWARE_EXTRA_INFORMATION:16')

# Feature 0x1814 version 1
[PRODUCT/FEATURES/COMMON/CHANGE_HOST]
Enabled = True
Version_1 = True

# Feature 0x1815 version 2
[PRODUCT/FEATURES/COMMON/HOSTS_INFO]
Enabled = True
Version_2 = True
SupportSetOSVersion = True
SupportSetName = True
SupportGetName = True
SupportBLEDescriptor = True
HostNameMaxLength = 24

# Feature 0x1816 version 0
[PRODUCT/FEATURES/COMMON/BLE_PRO_PREPAIRING]
Enabled = True
Version_0 = True
KeysSupported = 0x67

# Feature 0x1830 version 0
[PRODUCT/FEATURES/COMMON/POWER_MODES]
Enabled = True
Version_0 = True
TotalNumber = 4
NumberList = '0 1 2 3'
CurrentThresholdDeepSleep = 86

# Feature 0x1861 version 1
[PRODUCT/FEATURES/COMMON/BATTERY_LEVELS_CALIBRATION]
Enabled = True
Version_1 = True
Comparator = True
CompVRef = 1.8
AdcCoefficient = 0.2844
RequiredCalibrationPointNb = 2
RequiredCalibrationPoints = ('07D0', '0C1C')

# Feature 0x1891 version 9 #TODO

# Feature 0x18A1 version 0
[PRODUCT/FEATURES/COMMON/LED_TEST]
Enabled = True
Version_0 = True
BatteryGreenLED = 1
BatteryRedLED = 1
CapsLockLED = 1
ProductSpecificLED0 = 1
ProductSpecificLED1 = 1
ProductSpecificLED2 = 1

# Feature 0x18B0 version 1
[PRODUCT/FEATURES/COMMON/STATIC_MONITOR_MODE]
Enabled = True
Version_1 = True
KeyboardMode = True
EnhancedKeyboardMode = True
KeyboardWithLargerMatrixMode = True
EnhancedKeyboardWithLargerMatrixMode = True

# Feature 0x1B04 version 6
[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS]
Enabled = True
Version_6 = True
CidCount = 18
CidListWithoutGhostKey = ('00E8', '00E9', '0108', '00C8', '01A6')

# Feature 0x1B04 version 6 CID Info Table
[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS/CID_INFO_TABLE]
Enabled = True
FriendlyName                      = ('Host 1'		, 'Host 2'		, 'Host 3'		, 'Show Desktop'        , 'Search'              , 'Dictation'           , 'Emoji'          	 , 'Screen Capture'      , 'Play Pause Double Track'     , 'Mute'                , 'Volume Down'         , 'Volume Up'          ,'Brightness Down'     , 'Brightness Up'       , 'Action 1'            , 'Action 2'            , 'Action 3'          , 'Action 4'            ,)
Cid                               = ('0xD1'  		, '0xD2'  		, '0xD3'  		, '0x6E'                , '0xD4'                , '0x103'               , '0x108'            , '0x10A'               , '0x141'                       , '0xE7'                , '0xE8'                , '0xE9'               ,'0xC7'                , '0xC8'                , '0x1A3'               , '0x1A4'               , '0x1A5'             , '0x1A6'               ,)
Task                              = ('0xAE'  		, '0xAF'  		, '0xB0'  		, '0x43'                , '0xB1'                , '0xD8'                , '0xDD'             , '0xDF'                , '0xFD'                        , '0x03'                , '0x02'                , '0x01'               ,'0xA3'                , '0xA4'                , '0x10A'               , '0x10B'               , '0x10C'             , '0x10D'               ,)
FlagVirtual                       = ('False' 		, 'False' 		, 'False' 		, 'False'               , 'False'               , 'False'               , 'False'            , 'False'               , 'False'                       , 'False'               , 'False'               , 'False'              ,'False'               , 'False'               , 'False'               , 'False'               , 'False'             , 'False'               ,)
FlagPersist                       = ('False' 		, 'False' 		, 'False' 		, 'False'               , 'False'               , 'False'               , 'False'            , 'False'               , 'False'                       , 'False'               , 'False'               , 'False'              ,'False'               , 'False'               , 'False'               , 'False'               , 'False'             , 'False'               ,)
FlagDivert                        = ('False' 		, 'False' 		, 'False' 		, 'True'                , 'True'                , 'True'                , 'True'             , 'True'                , 'True'                        , 'True'                , 'True'                , 'True'               ,'True'                , 'True'                , 'True'                , 'True'                , 'True'              , 'True'                ,)
FlagReprog                        = ('False' 		, 'False' 		, 'False' 		, 'True'                , 'True'                , 'True'                , 'True'             , 'True'                , 'True'                        , 'True'                , 'True'                , 'True'               ,'True'                , 'True'                , 'True'                , 'True'                , 'True'              , 'True'                ,)
FlagFnTog                         = ('True'  		, 'True'  		, 'True'  		, 'True'                , 'True'                , 'True'                , 'True'             , 'True'                , 'True'                        , 'True'                , 'True'                , 'True'               ,'False'               , 'False'               , 'True'                , 'True'                , 'True'              , 'True'                ,)
FlagHotKey                        = ('False' 		, 'False' 		, 'False' 		, 'False'               , 'False'               , 'False'               , 'False'            , 'False'               , 'False'                       , 'False'               , 'False'               , 'False'              ,'False'               , 'False'               , 'False'               , 'False'               , 'False'             , 'False'               ,)
FlagMouse                         = ('False'  		, 'False'  		, 'False'  		, 'False'               , 'False'               , 'False'               , 'False'            , 'False'               , 'False'                       , 'False'               , 'False'               , 'False'              ,'False'               , 'False'               , 'False'               , 'False'               , 'False'             , 'False'               ,)
FlagFKey                          = ('True' 		, 'True' 		, 'True' 		, 'True'                , 'True'                , 'True'                , 'True'             , 'True'                , 'True'                        , 'True'                , 'True'                , 'True'               ,'False'               , 'False'               , 'False'               , 'False'               , 'False'             , 'False'               ,)
Pos                               = ('0x01'  		, '0x02'  		, '0x03'  		, '0x04'                , '0x05'                , '0x06'                , '0x07'             , '0x08'                , '0x09'                        , '0x0A'                , '0x0B'                , '0x0C'               ,'0x00'                , '0x00'                , '0x00'                , '0x00'                , '0x00'              , '0x00'                ,)
Group                             = ('0x00'  		, '0x00'  		, '0x00'  		, '0x00'                , '0x00'                , '0x00'                , '0x00'             , '0x00'                , '0x00'                        , '0x00'                , '0x00'                , '0x00'               ,'0x00'                , '0x00'                , '0x00'                , '0x00'                , '0x00'              , '0x00'                ,)
GMask                             = ('0x00'  		, '0x00'  		, '0x00'  		, '0x00'                , '0x00'                , '0x00'                , '0x00'             , '0x00'                , '0x00'                        , '0x00'                , '0x00'                , '0x00'               ,'0x00'                , '0x00'                , '0x00'                , '0x00'                , '0x00'              , '0x00'                ,)
AdditionalFlagsRawWheel           = ('False' 		, 'False' 		, 'False' 		, 'False'               , 'False'               , 'False'               , 'False'            , 'False'               , 'False'                       , 'False'               , 'False'               , 'False'              ,'False'               , 'False'               , 'False'               , 'False'               , 'False'             , 'False'               ,)
AdditionalFlagsAnalyticsKeyEvents = ('True'  		, 'True'  		, 'True'  		, 'True'                , 'True'                , 'True'                , 'True'             , 'True'                , 'True'                        , 'True'                , 'True'                , 'True'               ,'True'                , 'True'                , 'True'                , 'True'                , 'True'              , 'True'                ,)
AdditionalFlagsForceRawXY         = ('False' 		, 'False' 		, 'False' 		, 'False'               , 'False'               , 'False'               , 'False'            , 'False'               , 'False'                       , 'False'               , 'False'               , 'False'              ,'False'               , 'False'               , 'False'               , 'False'               , 'False'             , 'False'               ,)
AdditionalFlagsRawXY              = ('False' 		, 'False' 		, 'False' 		, 'False'               , 'False'               , 'False'               , 'False'            , 'False'               , 'False'                       , 'False'               , 'False'               , 'False'              ,'False'               , 'False'               , 'False'               , 'False'               , 'False'             , 'False'               ,)

# Feature 0x1D4B version 0
[PRODUCT/FEATURES/COMMON/WIRELESS_DEVICE_STATUS]
Enabled = True

# Feature 0x1E00 version 0 (Enabled in PRODUCT.settings.ini)

# Feature 0x1E02 version 0
[PRODUCT/FEATURES/COMMON/MANAGE_DEACTIVATABLE_FEATURES_AUTH]
Enabled = True
Version_0 = True
SupportManufacturing = True
SupportCompliance = True
SupportGotthard = True
PersistentActivationManufacturing = False
PersistentActivationCompliance = False
PersistentActivationGotthard = True
AuthFeature = 0x1602

# Feature 0x1EB0 version 0
[PRODUCT/FEATURES/COMMON/TDE_ACCESS_TO_NVM]
Enabled = True
Version_0 = True
TdeMaxSize = 0x20

# Feature 0x40A3 version 0
[PRODUCT/FEATURES/KEYBOARD/FN_INVERSION_FOR_MULTI_HOST_DEVICES]
Enabled = True
Version_0 = True
HasFnLock= True
FnInversionDefaultState = 1

# Feature 0x4220 version 0
[PRODUCT/FEATURES/KEYBOARD/LOCK_KEY_STATE]
Enabled = True
Version_0 = True

# Feature 0x4521 version 0
[PRODUCT/FEATURES/KEYBOARD/DISABLE_KEYS]
Enabled = True
Version_0 = True
CapsLock = True
Insert = True
Windows = True
DefaultDisabledKeys = 0

# Feature 0x4531 version 1
[PRODUCT/FEATURES/KEYBOARD/MULTI_PLATFORM]
Enabled = True
Version_1 = True
# platform descriptor
OsMask = ('21', '32', '64', '8')
PlatformSource = ('0', '0', '0')
PlatformIndex = ('0', '255', '255')
AutoPlatform = ('255', '255', '255')
AutoDescriptor = ('255', '255', '255')
# platform info
OsDetection = True
SetHostPlatform = True

# Feature 0x4540 version 1
[PRODUCT/FEATURES/KEYBOARD/KEYBOARD_INTERNATIONAL_LAYOUTS]
Enabled = True
Version_1 = True
KeyboardLayout = 0

[RECEIVER/ENUMERATION]
Number_Of_Pairing_Slots = 06

[RECEIVER/TDE]
Enabled = False
Prepairing = False
Non_Volatile_Memory_Access_Size = 16
IRK = True
CSRK = False

[PRODUCT/HID_REPORT]
# https://docs.google.com/spreadsheets/d/1jdQ-WEVNmfepdH6lxDKLfZSQwVL4keXqh0Rq44ZrfUM/edit#gid=2032643977&range=F67
HidGuidelinesVersion = 3.1
HidKeyboardType = 'HidKeyboard'
ProductSpecificUsages = ('BRIGHTNESS_DOWN', 'BRIGHTNESS_UP', 'VOICE_DICTATION', 'EMOJI_PICKER', 'START_OR_STOP_MICROPHONE_CAPTURE', 'SCAN_PREVIOUS_TRACK', 'PLAY_PAUSE','SCAN_NEXT_TRACK', 'MUTE', 'MENU', 'AL_CALCULATOR', 'AC_VIEW_TOGGLE', 'POWER', 'AC_SEARCH', 'VOLUME_DOWN', 'VOLUME_UP',)
TopRowUsagesCount = 0x0C

[PRODUCT/NVS_UICR]
MagicNumber = True

[SHARED/DEVICES]
# List devices for each device dependent property
Type = ('1',)
Name = ('Chengdu',)
UnitIds_1 = ('E7341431',)
BLEProServiceVersion = ('01',)
ExtendedModelId = ('0',)
PrePairingAuthMethod = ('1',)
PasskeyAuthMethod = ('1',)
Passkey2ButtonsAuthMethod = ('0',)
AuthEntropy = ('20',)
RootFeatureVersion = ('2',)

[SHARED/DISCOVERY]
Enabled = True

[SHARED/PAIRING]
Enabled = True
BLEDevicePairing = True
PasskeyAuthenticationMethod = True
BLEProOsDetection = True
BLELatencyRemoval = True

[RUNTIME/DEBUGGERS]
Targets = ("Device"                , )
Types   = ("Quark256JlinkDebugger" , )

[BUG_TRACKER]
Bug_AnalyticsKeyEvents_CID_Packing = True
Bug_DivertedButtonsEvent_5th_CID_fill_in = True
Bug_BLE_GAP_Appearance_Bootloader = True
Bug_BLE_Unsupported_Report_Map = True
Bug_Dictation_Abort_Handling = True
Bug_Pairing_Mode_Long_Press_Timeout_Reset = True
Bug_Sticky_Keys_In_Monitor_Mode_Event = True
Bug_MonitorMode_BadRowColValues = True
Bug_Erasing_Leading_Zero = True