; -----------------------------------------------------------------------------
; Python Test Harness
; -----------------------------------------------------------------------------
;
; [Summary]  INGA CS specific features
;
; [Author] YY Liu
;
; [DateTime]   2021/10/22
; -----------------------------------------------------------------------------
[PRODUCT]
ProductReference = 'RBK72'
# USB Receiver
# USB_PID_MEZZY_BLE_PRO: 0xC548
ProductID = 'C548'
# EQUAD_PID_INGA_CS BLE PRO
TransportID = ('B367',)
BluetoothPID = 'B367'
EQuadPID = 'B367'
NvsStartAddress = 0x76000
NvsSize = 40960

[PRODUCT/DEVICE]
MaxWaitSleep = 10
MaxWaitDeepSleep = 7200
KeyboardType = 'mechanical'
NbHosts = 3

[PRODUCT/DEVICE/FN_LOCK]
PWS_UX_V1_2 = True

[PRODUCT/NVS_CHUNK_IDS]
Enabled = True
IsGamingVariant = True
ChunkIdNames = ('NVS_LEDBKLT_ID', )
ChunkIdValues = ('0x0009', )

# Feature 0x0000 version 2
[PRODUCT/FEATURES/IMPORTANT/ROOT]
Version_1 = False
Version_2 = True
ProtocolNum = [04]
TargetSW = [05]

# Feature 0x0001 version 2
[PRODUCT/FEATURES/IMPORTANT/FEATURE_SET]
Version_0 = False
Version_1 = False
Version_2 = True
FeatureCountInBLE = 32
BootloaderFeatureCountInBLE = 0x05

# Feature 0x0003 version 4
[PRODUCT/FEATURES/COMMON/DEVICE_INFORMATION]
Enabled = True
Version_4 = True
EntityCount = 0x03
FwType = ('01','00','05')
FwPrefix = ('BL1','RBK','')
FwNumber = ('50','72','00')
Revision = ('00','00','00','00')
Build = ('0010','0010','0126')
TransportId = ('B367','B367','0000')
UnitId = '5666AAF5'
TransportUsb = False
TransportEQuad = False
TransportBTLE = True
TransportBT = False
ModelId = 'B36700000000'
ExtendedModelId = 0x00
BootLoaderModelId = 'B36700000000'
CapabilitiesSerialNumber = True
SerialNumber = ('000000000000000000000000',)

# Feature 0x0005 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_TYPE_AND_NAME]
Enabled = True
Version_0 = True
MarketingName = 'MX Mechanical Mini'
DeviceType = 0

# Feature 0x0007 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_FRIENDLY_NAME]
Enabled = True
Version_0 = True
NameMaxLength = 18

# Feature 0x00C2
[PRODUCT/FEATURES/COMMON/DFU_CONTROL]
Enabled = False

# Feature 0x00C3 version 0
[PRODUCT/FEATURES/COMMON/SECURE_DFU_CONTROL]
Enabled = True
Version_0 = True
DfuControlTimeout = 30
DfuControlActionType = 1
DfuControlActionData = 0x000000

# Feature 0x00D0 version 3
[PRODUCT/FEATURES/COMMON/DFU]
Enabled = True
Version_3 = True
MagicString = "RBK72_D0"
UpgradableEntityTypes = ('0','5')
ErrorLevel = 3
HexFileName = "inga_cs_prod.hex"
FlashWriteVerify = False
VerifyCmd3DoneAfterCmd1And2 = False
VerifyFlag = False
LowestApplicationAddress = 0x00019000
HighestApplicationAddress = 0x00065000
ApplicationValidityFlagSize = 4
AdditionalAuthentication = True
EncryptCapabilities = ('3','1')

# Battery
[PRODUCT/DEVICE/BATTERY]
MaximumVoltage = 4.2
NominalVoltage = 4.0
CutOffVoltage = 3.525
USBCharging = True

# Feature 0x1004 version 3
[PRODUCT/FEATURES/COMMON/UNIFIED_BATTERY]
Enabled = True
Version_3 = True
SupportedLevels = ('100','50','30','10')
CapabilitiesFlags = ('1', '1', '0', '0')
DischargeSOCmV = ('4180', '4080', '4040', '4000', '3965', '3935', '3900', '3865', '3830', '3810', '3795', '3780', '3770', '3760', '3750', '3735', '3720', '3700', '3670', '3640', '3520')
RechargeSOCmV = ('4200', '4200', '4170', '4125', '4085', '4050', '4020', '3995', '3970', '3950', '3935', '3920', '3905', '3895', '3885', '3875', '3860', '3830', '3800', '3690', '3240')
StateOfChargeStep = 5
EnableChargingTests = True

# Feature 0x1803
[PRODUCT/FEATURES/COMMON/GPIO_ACCESS]
Enabled = True
Version_0 = True

# Feature 0x1805 version 0
[PRODUCT/FEATURES/COMMON/OOB_STATE]
Enabled = True
Version_0 = True

# Feature 0x1814 version 1
[PRODUCT/FEATURES/COMMON/CHANGE_HOST]
Enabled = True
Version_0 = False
Version_1 = True

# Feature 0x1815 version 2
[PRODUCT/FEATURES/COMMON/HOSTS_INFO]
Enabled = True
Version_2 = True
SupportSetOSVersion = True
SupportSetName = True
SupportGetName = True
SupportBLEDescriptor = True
SupportBTDescriptor = False
HostNameMaxLength = 24
HostBusType = 5

# Feature 0x1982 version 2
[PRODUCT/FEATURES/COMMON/BACKLIGHT]
Enabled = True
Version_2 = True
BacklightEffect = '00'
BacklightEffectList = '7F00'
# ALS (automatic) mode
BacklightStatus = '02'
NumberOfLevel = '08'
# SupportedOptions: Wow & PwrSave
SupportedOptions = '0505'

# Feature 0x1B04 version 5
[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS]
Enabled = True
Version_5 = True
CidCount = 32

[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS/CID_INFO_TABLE]
Enabled = True
FriendlyName                      = ('Host 1'               , 'Host 2'               , 'Host 3'               , 'Backlight Down'          , 'Backlight Up'            , 'Dictation'              , 'Unicode Emoji Menu'      , 'Print Screen2'        , 'Mute Microphone'      , 'Multi Platform Search' , 'Cid Unknown'          , 'Re Prog Mute'         , 'Re Prog Vol Down'     , 'Re Prog Vol Up'                      , 'Grave Accent'         , 'Standard Tab Key'     , 'Standard Caps Lock'      , 'Standard Left Shift'  , 'Standard Left Control' , 'Standard Left Option Or Start' , 'Standard Left Command Or Alt' , 'Standard Right Command Or Alt' , 'Cid Unknown'          , 'Standard Right Shift' , 'Backslash'            , 'Standard Delete'      , 'Standard Home'        , 'Standard End'         , 'Standard Page Up'     , 'Standard Page Down'   , 'FLock Change Notification' , 'Fn Key'               ,)
Cid                               = ('0xD1'                 , '0xD2'                 , '0xD3'                 , '0xE2'                    , '0xE3'                    , '0x103'                  , '0x108'                   , '0x10A'                , '0x11C'                , '0xD4'                  , '0x141'                , '0xE7'                 , '0xE8'                 , '0xE9'                                , '0x10B'                , '0x10C'                , '0x10D'                   , '0x10E'                , '0x10F'                 , '0x110'                         , '0x111'                        , '0x112'                         , '0x13C'                , '0x115'                , '0x11E'                , '0x117'                , '0x118'                , '0x119'                , '0x11A'                , '0x11B'                , '0xDE'                      , '0x34'                 ,)
Task                              = ('0xAE'                 , '0xAF'                 , '0xB0'                 , '0xC1'                    , '0xC2'                    , '0xD8'                   , '0xDD'                    , '0xDF'                 , '0xF1'                 , '0xB1'                  , '0xFD'                 , '0x03'                 , '0x02'                 , '0x01'                                , '0xE0'                 , '0xE1'                 , '0xE2'                    , '0xE3'                 , '0xE4'                  , '0xE5'                          , '0xE6'                         , '0xE7'                          , '0xF8'                 , '0xEA'                 , '0xF3'                 , '0xEC'                 , '0xED'                 , '0xEE'                 , '0xEF'                 , '0xF0'                 , '0x62'                      , '0x62'                 ,)
FlagVirtual                       = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                 , 'False'                , 'False'                , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                 , 'False'                         , 'False'                        , 'False'                         , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                     , 'False'                ,)
FlagPersist                       = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                 , 'False'                , 'False'                , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                 , 'False'                         , 'False'                        , 'False'                         , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                     , 'False'                ,)
FlagDivert                        = ('False'                , 'False'                , 'False'                , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                  , 'True'                 , 'True'                 , 'True'                 , 'True'                                , 'True'                 , 'True'                 , 'True'                    , 'True'                 , 'True'                  , 'True'                          , 'True'                         , 'True'                          , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                     , 'False'                ,)
FlagReprog                        = ('False'                , 'False'                , 'False'                , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                  , 'True'                 , 'True'                 , 'True'                 , 'True'                                , 'True'                 , 'True'                 , 'True'                    , 'True'                 , 'True'                  , 'True'                          , 'True'                         , 'True'                          , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                     , 'False'                ,)
FlagFnTog                         = ('True'                 , 'True'                 , 'True'                 , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                  , 'True'                 , 'True'                 , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                 , 'False'                         , 'False'                        , 'False'                         , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                     , 'False'                ,)
FlagHotKey                        = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                 , 'False'                , 'False'                , 'True'                 , 'True'                                , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                 , 'False'                         , 'False'                        , 'False'                         , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                     , 'True'                 ,)
FlagFKey                          = ('True'                 , 'True'                 , 'True'                 , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                  , 'True'                 , 'True'                 , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                 , 'False'                         , 'False'                        , 'False'                         , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'True'                      , 'False'                ,)
FlagMouse                         = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                 , 'False'                , 'False'                , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                 , 'False'                         , 'False'                        , 'False'                         , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                     , 'False'                ,)
Pos                               = ('0x01'                 , '0x02'                 , '0x03'                 , '0x04'                    , '0x05'                    , '0x06'                   , '0x07'                    , '0x08'                 , '0x09'                 , '0x0A'                  , '0x0B'                 , '0x0C'                 , '0x00'                 , '0x00'                                , '0x00'                 , '0x00'                 , '0x00'                    , '0x00'                 , '0x00'                  , '0x00'                          , '0x00'                         , '0x00'                          , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                      , '0x00'                 ,)
Group                             = ('0x00'                 , '0x00'                 , '0x00'                 , '0x00'                    , '0x00'                    , '0x00'                   , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                  , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                                , '0x00'                 , '0x00'                 , '0x00'                    , '0x00'                 , '0x00'                  , '0x00'                          , '0x00'                         , '0x00'                          , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                      , '0x00'                 ,)
GMask                             = ('0x00'                 , '0x00'                 , '0x00'                 , '0x00'                    , '0x00'                    , '0x00'                   , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                  , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                                , '0x00'                 , '0x00'                 , '0x00'                    , '0x00'                 , '0x00'                  , '0x00'                          , '0x00'                         , '0x00'                          , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                      , '0x00'                 ,)
AdditionalFlagsRawWheel           = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                 , 'False'                , 'False'                , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                 , 'False'                         , 'False'                        , 'False'                         , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                     , 'False'                ,)
AdditionalFlagsAnalyticsKeyEvents = ('True'                 , 'True'                 , 'True'                 , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                  , 'True'                 , 'True'                 , 'True'                 , 'True'                                , 'True'                 , 'True'                 , 'True'                    , 'True'                 , 'True'                  , 'True'                          , 'True'                         , 'True'                          , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                      , 'True'                 ,)
AdditionalFlagsForceRawXY         = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                 , 'False'                , 'False'                , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                 , 'False'                         , 'False'                        , 'False'                         , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                     , 'False'                ,)
AdditionalFlagsRawXY              = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                 , 'False'                , 'False'                , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                 , 'False'                         , 'False'                        , 'False'                         , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                     , 'False'                ,)

# Feature 0x1D4B version 0
[PRODUCT/FEATURES/COMMON/WIRELESS_DEVICE_STATUS]
Enabled = True

# Feature 0x40A3 version 0
[PRODUCT/FEATURES/KEYBOARD/FN_INVERSION_FOR_MULTI_HOST_DEVICES]
Enabled = True
Version_0 = True
FnInversionDefaultState = 1
HasFnLock = True

# Feature 0x4220 version 0
# TODO

# Feature 0x4521 version 0
[PRODUCT/FEATURES/KEYBOARD/DISABLE_KEYS]
Enabled = True
Version_0 = True
CapsLock = True
NumLock = False
ScrollLock = True
Insert = True
Windows = True
DefaultDisabledKeys = 0

# Feature 0x4531 version 1
[PRODUCT/FEATURES/KEYBOARD/MULTI_PLATFORM]
Enabled = True
Version_1 = True
# platform descriptor
OsMask = ('1', '32', '64')
# platform info
OsDetection = True
SetHostPlatform = True

# Feature 0x8100 version 2
# TODO

# Feature 0x1802 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_RESET]
Enabled = True
PowerModeDelay = ('0', '1', '10', '300')

# Feature 0x1803 version 0
# TODO

# Feature 0x1805 version 0
[PRODUCT/FEATURES/COMMON/OOB_STATE]
Enabled = True
Version_0 = True

# Feature 0x1806 version 8
[PRODUCT/FEATURES/COMMON/CONFIGURABLE_DEVICE_PROPERTIES]
Enabled = True
Version_8 = True
DeviceNameMaxCount = 0x32
SupportedPropertyIds = (1, 2, 6, 7, 8, 10, 11)

# Feature 0x1816 version 0
[PRODUCT/FEATURES/COMMON/BLE_PRO_PREPAIRING]
Enabled = True
Version_0 = True
KeysSupported = 0x67

# Feature 0x1830 version 0
[PRODUCT/FEATURES/COMMON/POWER_MODES]
Enabled = True
Version_0 = True
TotalNumber = 4
NumberList = '0 1 2 3'
CurrentThresholdDeepSleep = 100
CurrentThresholdDeadMode = 105

# Feature 0x1861 version 1
[PRODUCT/FEATURES/COMMON/BATTERY_LEVELS_CALIBRATION]
Enabled = True
Version_0 = False
Version_1 = True
RequiredCalibrationPointNb = 2
RequiredCalibrationPoints = ('0DC5', '1068')
AdcCoefficient = 0.23621256

# Feature 0x1891 version 5
# Todo

# Feature 0x18A1 version 0
# TODO

# Feature 0x18B0 version 0
# TODO

# Feature 0x1A20 version 0
# TODO

# Feature 0x1DF3 version 0
[PRODUCT/FEATURES/COMMON/EQUAD_DJ_DEBUG_INFO]
Enabled = False

# Feature 0x1E80 version 0
# TODO

# Feature 0x1E00 version 0
[PRODUCT/FEATURES/COMMON/ENABLE_HIDDEN]
Enabled = True

# Feature 0x1EB0 version 0
[PRODUCT/FEATURES/COMMON/TDE_ACCESS_TO_NVM]
Enabled = True
Version_0 = True
TdeMaxSize = 0x20
TdeStartingPosition = 0x00

# Feature 0x1E02 version 0
[PRODUCT/FEATURES/COMMON/MANAGE_DEACTIVATABLE_FEATURES_AUTH]
Enabled = True
Version_0 = True
SupportManufacturing = True
SupportCompliance = True
SupportGotthard = True
PersistentActivationManufacturing = False
PersistentActivationCompliance = False
PersistentActivationGotthard = True
AuthFeature = 0x1602

# Feature 0x1602 version 0
# TODO

# BLE PRO Features
[SHARED/DISCOVERY]
Enabled = True

[SHARED/PAIRING]
Enabled = True
BLEDevicePairing = True
PasskeyAuthenticationMethod = True
BLEProOsDetection = True
BLELatencyRemoval = True

[PRODUCT/DEVICE/CONNECTION_SCHEME]
MultipleChannels = True
MultipleEasySwitchButtons = True

[PRODUCT/DEVICE/CONNECTION_SCHEME/BLE_PRO_CS]
Enabled = True
Version_0 = True
SafePrePairedReceiver = True

[SHARED/DEVICES]
# List devices for each device dependent property
Type = ('1')
Name = ('MX MCHNCL M')
UnitIds_1 = ('5666AAF5')
BLEProServiceVersion = ('01')
ExtendedModelId = ('0')
PrePairingAuthMethod = ('1')
PasskeyAuthMethod = ('1')
Passkey2ButtonsAuthMethod = ('0')
AuthEntropy = ('20')
RootFeatureVersion = ('2')

[RECEIVER/ENUMERATION]
Number_Of_Pairing_Slots = 06

[PRODUCT/DEVICE/CONNECTION_SCHEME/DEVICE_RECOVERY]
Enabled = True
RecoveryKeysVariant = "kdb-recovery-keys-make_reset_kdb-recovery-keys-break"

[RECEIVER/TDE]
Enabled = False
Prepairing = False
Non_Volatile_Memory_Access_Size = 16
IRK = True
CSRK = False

[PRODUCT/DEBOUNCE]
# https://eapps.logitech.com/Equinox/TestItem_Show.aspx?ProjectId=920&ProcedureId=13&TestItemId=15116&ActiveTab=Result%20Template
Enabled = True
Version_1 = True
0PercentMakeDebounceUs = 3100
100PercentMakeDebounceUs = 8100
MakeBlindWindowUs = 20000
0PercentBreakDebounceUs = 24000
100PercentBreakDebounceUs = 28200
BreakBlindWindowUs = 20000
100PercentMakeDeepSleepUs = 23000

[PRODUCT/HID_REPORT]
HidGuidelinesVersion = 2.0
HidKeyboardType = 'HidKeyboard'

[RUNTIME/DEBUGGERS]
Targets = ("Device"                      , )
Types   = ("QuarkMultiZoneJlinkDebugger" , )

# Bug tracker SubSystem
[BUG_TRACKER]
Bug_Backlight_EventGenerationForEnterOrExitCriticalBattery = True
Bug_Backlight_BreathingEffectLevelByMonitoring = True
Bug_Backlight_DurationEffectLevelZeroToOneByMonitoring = True
Bug_AnalyticsKeyEvents_CID_Packing = True
Bug_DivertedButtonsEvent_5th_CID_fill_in = True
Bug_Erasing_Leading_Zero = True