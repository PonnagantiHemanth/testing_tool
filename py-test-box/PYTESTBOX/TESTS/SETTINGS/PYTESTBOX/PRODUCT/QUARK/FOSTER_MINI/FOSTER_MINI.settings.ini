; -----------------------------------------------------------------------------
; Python Test Harness
; -----------------------------------------------------------------------------
;
; [Summary]  Foster Mini B2C keyboard specific features
;            Google Drive: https://drive.google.com/drive/folders/1hUn5LSzrOjPUwi7EW9IUyC97zGCO0g3R
;            Foster Mini PRD: https://docs.google.com/document/d/19m4CfFHF-jFIERil1C7hvXQaEWJlS4g9if3B8UIGUWE/edit
;            The delta between Foster and Foster Mini universal:
;               https://docs.google.com/document/d/14Y8x-9_ar4mBUdMfmZBvZ-xv0LJt-c2ibvNxF3lrl68/edit
;            KeyMatrix v2.4: https://drive.google.com/file/d/1bk-Yj__JwQ-De4xth1HJIp1GM6EjQ48L/view
;            Requirements for CI Setup_Foster Mini: https://docs.google.com/document/d/1fYjK5AbbcCP3B0Tgw6NHKlay0qytqMKveuKzbAKiqr0/edit?ts=607e8bbf
;
; [Author] Christophe Roquebert
;
; [DateTime]   2021/05/12
; -----------------------------------------------------------------------------

[PRODUCT]
ProductReference = 'RBK73'
# USB Receiver
# USB_PID_MEZZY_BLE_PRO: 0xC548
ProductID = 'C548'
# BT_PID_FOSTER_MINI      0xB369
TransportID = ('B369',)
BluetoothPID = 'B369'
EQuadPID = 'B369'
IsMice = False

[PRODUCT/DEVICE]
MaxWaitSleep = 10
MaxWaitDeepSleep = 7200
KeyboardType = 'membrane'
NbHosts = 3

[PRODUCT/DEVICE/FN_LOCK]
PWS_UX_V1_2 = True

[PRODUCT/NVS_CHUNK_IDS]
Enabled = True
ChunkIdNames = ('NVS_X1E02_STATE_ID', )
ChunkIdValues = ('0x0250', )

# USB communication
[PRODUCT/USB_COMMUNICATION]
SetIdleSupported = True

# Feature 0x0000 version 2
[PRODUCT/FEATURES/IMPORTANT/ROOT]
Version_1 = False
Version_2 = True

# Feature 0x0001 version 2
[PRODUCT/FEATURES/IMPORTANT/FEATURE_SET]
Version_1 = False
Version_2 = True
FeatureCountInBLE = 0x1F
BootloaderFeatureCountInBLE = 0x05

# Feature 0x0003 version 4
[PRODUCT/FEATURES/COMMON/DEVICE_INFORMATION]
Enabled = True
Version_4 = True
EntityCount = 3
UnitId = ('09D07BA3','91F790D6',)
TransportUsb = False
TransportEQuad = False
BootLoaderTransportEQuad = False
TransportBTLE = True
TransportBT = False
ModelId = 'B36900000000'
ExtendedModelId = 0
CapabilitiesSerialNumber = True
FwType = ('01', '00', '05')
FwPrefix = ('BL1', 'RBK', '')
FwNumber = ('53', '73', '00')
Revision = ('00', '00', '00')
Build = ('0002', '0002', '0119')
TransportId = ('B369', 'B369', '0000')
SerialNumber = ('000000000000000000000000',)

# Feature 0x0005 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_TYPE_AND_NAME]
Enabled = True
Version_0 = True
# B2C Device Name in Options
MarketingName = 'MX Keys Mini'
# B2B Device Name in Options
#MarketingName = 'MX Keys Mini for Business'
DeviceType = 0

# Feature 0x0007 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_FRIENDLY_NAME]
Enabled = True
Version_0 = True
NameMaxLength = 18

# Feature 0x0020 version 0

# Feature 0x00C2
[PRODUCT/FEATURES/COMMON/DFU_CONTROL]
Enabled = False

# Feature 0x00C3 version 0
[PRODUCT/FEATURES/COMMON/SECURE_DFU_CONTROL]
Enabled = True
Version_0 = True
DfuControlTimeout = 30
DfuControlActionType = 1
DfuControlActionData = 0x000000

# Feature 0x00D0 version 3
[PRODUCT/FEATURES/COMMON/DFU]
Enabled = True
Version_3 = True
MagicString = "RBK73_D0"
UpgradableEntityTypes = ('0', '5')
ErrorLevel = 3
HexFileName = "foster_mini_prod.hex"
SoftDeviceDfuFileName = "foster_mini_s112_nrf52810_limit.dfu"
FlashWriteVerify = False
VerifyCmd3DoneAfterCmd1And2 = False
VerifyFlag = False
LowestApplicationAddress = 0x00019000
HighestApplicationAddress = 0x00031000
AdditionalAuthentication = True
EncryptCapabilities = ('3',)

[PRODUCT/DEVICE/BATTERY]
MaximumVoltage = 4.2
NominalVoltage = 4.0
CutOffVoltage = 3.6

# Feature 0x1004 version 2 - same as Foster B0009
[PRODUCT/FEATURES/COMMON/UNIFIED_BATTERY]
Enabled = True
Version_2 = True
SupportedLevels = ('100', '50', '30', '10')
CapabilitiesFlags = ('1', '1', '0')
# charge&discharge Excel formula fitting: https://docs.google.com/spreadsheets/d/17K7tAZdkz4Z3HCXvy7wWZ4gadDLLwAqt/edit#gid=1860811547
DischargeSOCmV = ('4190', '4140', '4090', '4050', '4010', '3960', '3920', '3890', '3860', '3840', '3820', '3800', '3790', '3770', '3750', '3740', '3720', '3700', '3680', '3650', '3590')
RechargeSOCmV = ('4200', '4200', '4200', '4200', '4130', '4090', '4050', '4020', '4000', '3980', '3960', '3950', '3930', '3910', '3900', '3890', '3870', '3850', '3810', '3770', '3600')
StateOfChargeStep = 5

# Feature 0x1802 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_RESET]
Enabled = True

# TODO - Feature 0x1803 version 0 to be implemented in the test framework

# Feature 0x1805 version 0
[PRODUCT/FEATURES/COMMON/OOB_STATE]
Enabled=True
Version_0 = True

# Feature 0x1806 version 8
[PRODUCT/FEATURES/COMMON/CONFIGURABLE_DEVICE_PROPERTIES]
Version_8 = True

# Feature 0x1814 version 1
[PRODUCT/FEATURES/COMMON/CHANGE_HOST]
Enabled = False
Version_1 = True

# Feature 0x1815 version 1 - same as Foster B0009
[PRODUCT/FEATURES/COMMON/HOSTS_INFO]
Enabled = True
Version_1 = True
SupportSetOSVersion = True
SupportSetName = True
SupportGetName = True
SupportBTDescriptor = True
HostNameMaxLength = 24
HostBusType = 4

# Feature 0x1816 version 0
[PRODUCT/FEATURES/COMMON/BLE_PRO_PREPAIRING]
Enabled=True
Version_0 = True
KeysSupported = 0x67

# Feature 0x1830 version 0
[PRODUCT/FEATURES/COMMON/POWER_MODES]
Enabled = True
Version_0 = True
TotalNumber = 4
NumberList = '0 1 2 3'
CurrentThresholdDeepSleep = 151

# Feature 0x1861 version 0 - same as Foster B0009
[PRODUCT/FEATURES/COMMON/BATTERY_LEVELS_CALIBRATION]
Enabled = True
Version_0 = True
RequiredCalibrationPointNb = 2
RequiredCalibrationPoints = ('0E10', '1068')
AdcCoefficient = 0.2109

# TODO - Feature 0x1891 version 6 to be implemented in the test framework

# TODO - Feature 0x18A1 version 0 to be implemented in the test framework

# TODO - Feature 0x18B0 version 0 to be implemented in the test framework

# Feature 0x1982 version 1
[PRODUCT/FEATURES/COMMON/BACKLIGHT]
Enabled = True
Version_1 = True
BacklightEffect = '00'
# BacklightEffectList : static & None
BacklightEffectList = '0300'
# ALS (automatic) mode
BacklightStatus = '02'
NumberOfLevel = '08'
# SupportedOptions: Wow & PwrSave
SupportedOptions = '0505'

# TODO - Feature 0x1A20 version 0 to be implemented in the test framework

# Feature 0x1B04 version 5
[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS]
Enabled = True
Version_5 = True
CidCount = 16
CidListWithoutGhostKey = ('010A', '011C', '00E5', '00E7', '00E8')

[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS/CID_INFO_TABLE]
# https://docs.google.com/spreadsheets/d/1o7SMziy4lCSGyPjUVWWoP1NNPxPyWU_2VcnX-T8tVBQ/edit#gid=127882645
Enabled = True
FriendlyName                      = ('Host 1'               , 'Host 2'               , 'Host 3'               , 'Backlight Down'         , 'Backlight Up'            , 'Dictation'            , 'Emoji Panel'          , 'Screen Capture'       , 'Mute Microphone'      , 'Play Pause'           , 'Mute'                 , 'Volume Down'          , 'Volume Up'            , 'Delete'               , 'Fn Lock'              , 'Fn Key'               ,)
Cid                               = ('0xD1'                 , '0xD2'                 , '0xD3'                 , '0xE2'                   , '0xE3'                    , '0x103'                , '0x108'                , '0x10A'                , '0x11C'                , '0xE5'                 , '0xE7'                 , '0xE8'                 , '0xE9'                 , '0x117'                , '0xDE'                 , '0x34'                 ,)
Task                              = ('0xAE'                 , '0xAF'                 , '0xB0'                 , '0xC1'                   , '0xC2'                    , '0xD8'                 , '0xDD'                 , '0xDF'                 , '0xF1'                 , '0x04'                 , '0x03'                 , '0x02'                 , '0x01'                 , '0xEC'                 , '0x62'                 , '0x62'                 ,)
FlagVirtual                       = ('False'                , 'False'                , 'False'                , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagPersist                       = ('False'                , 'False'                , 'False'                , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagDivert                        = ('False'                , 'False'                , 'False'                , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                ,)
FlagReprog                        = ('False'                , 'False'                , 'False'                , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                ,)
FlagFnTog                         = ('True'                 , 'True'                 , 'True'                 , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagHotKey                        = ('False'                , 'False'                , 'False'                , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'True'                 , 'True'                 , 'False'                , 'True'                 ,)
FlagFKey                          = ('True'                 , 'True'                 , 'True'                 , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                , 'True'                 , 'False'                ,)
FlagMouse                         = ('False'                , 'False'                , 'False'                , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
Pos                               = ('0x01'                 , '0x02'                 , '0x03'                 , '0x04'                   , '0x05'                    , '0x06'                 , '0x07'                 , '0x08'                 , '0x09'                 , '0x0A'                 , '0x0B'                 , '0x0C'                 , '0x0D'                 , '0x0E'                 , '0x00'                 , '0x00'                 ,)
Group                             = ('0x00'                 , '0x00'                 , '0x00'                 , '0x00'                   , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 ,)
GMask                             = ('0x00'                 , '0x00'                 , '0x00'                 , '0x00'                   , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 ,)
AdditionalFlagsRawWheel           = ('False'                , 'False'                , 'False'                , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
AdditionalFlagsAnalyticsKeyEvents = ('True'                 , 'True'                 , 'True'                 , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 ,)
AdditionalFlagsForceRawXY         = ('False'                , 'False'                , 'False'                , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
AdditionalFlagsRawXY              = ('False'                , 'False'                , 'False'                , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)

# Feature 0x1D4B version 0
[PRODUCT/FEATURES/COMMON/WIRELESS_DEVICE_STATUS]
Enabled = True

# Feature 0x1DF3
[PRODUCT/FEATURES/COMMON/EQUAD_DJ_DEBUG_INFO]
Enabled = False

# Feature 0x1E00 version 0 (Enabled in PRODUCT.settings.ini)
[PRODUCT/FEATURES/COMMON/ENABLE_HIDDEN]
Enabled = True

# Feature 0x1E02
[PRODUCT/FEATURES/COMMON/MANAGE_DEACTIVATABLE_FEATURES_AUTH]
Enabled = True
Version_0 = True
SupportManufacturing = True
SupportCompliance = True
SupportGotthard = True
PersistentActivationManufacturing = False
PersistentActivationCompliance = False
PersistentActivationGotthard = True
AuthFeature = 0x1602

# Feature 0x1EB0 version 0
[PRODUCT/FEATURES/COMMON/TDE_ACCESS_TO_NVM]
Enabled = False
Version_0 = True
TdeMaxSize = 0x20

# Feature 0x40A3 version 0
[PRODUCT/FEATURES/KEYBOARD/FN_INVERSION_FOR_MULTI_HOST_DEVICES]
Enabled = True
Version_0 = True
FnInversionDefaultState = 1
HasFnLock = True

# TODO - Feature 0x4220 version 0 to be implemented in the test framework

# TODO - Feature 0x4521 version 0 to be implemented in the test framework

# Feature 0x4531 version 1
[PRODUCT/FEATURES/KEYBOARD/MULTI_PLATFORM]
Enabled = True
Version_1 = True
# platform descriptor
OsMask = ('1', '32', '64', '16')
# platform info
OsDetection = True
SetHostPlatform = True

# BLE PRO Features
[SHARED/DISCOVERY]
Enabled = True

[SHARED/PAIRING]
Enabled=True
BLEDevicePairing = True
PasskeyAuthenticationMethod = True
BLEProOsDetection = True
BLELatencyRemoval = True

[PRODUCT/DEVICE/CONNECTION_SCHEME]
MultipleChannels = True
MultipleEasySwitchButtons = True

[PRODUCT/DEVICE/CONNECTION_SCHEME/BLE_PRO_CS]
Enabled = True
Version_0 = True
SafePrePairedReceiver = True

[SHARED/DEVICES]
# List devices for each device dependent property
Type = ('1',)
# B2C Bluetooth Name
Name = ('MX Keys Mini',)
# B2B Bluetooth Name
#Name = ('MX Keys Mini B',)
UnitIds_1 = ('09D07BA3', )
BLEProServiceVersion = ('01',)
ExtendedModelId = ('0',)
PrePairingAuthMethod = ('1',)
PasskeyAuthMethod = ('1',)
Passkey2ButtonsAuthMethod = ('0',)
AuthEntropy = ('20',)
RootFeatureVersion = ('2',)

[RECEIVER/ENUMERATION]
Number_Of_Pairing_Slots = 06

[PRODUCT/DEVICE/CONNECTION_SCHEME/DEVICE_RECOVERY]
Enabled = True
RecoveryKeysVariant = "kdb-recovery-keys-make_reset_kdb-recovery-keys-break"

[RECEIVER/TDE]
Enabled = False
Prepairing = False
Non_Volatile_Memory_Access_Size = 16
IRK = True
CSRK = False

[PRODUCT/HID_REPORT]
HidGuidelinesVersion = 2.0
HidKeyboardType = 'HidKeyboardBitmap'

[RUNTIME/DEBUGGERS]
Targets = ("Device"                , )
Types   = ("Quark256JlinkDebugger" , )


# Bug tracker SubSystem
[BUG_TRACKER]
Bug_Foster_DisableFeatures_Gotthard = True
Bug_Foster_ShowBatteryStatus_NotAllowed = True
Bug_AnalyticsKeyEvents_CID_Packing = True
Bug_Erasing_Leading_Zero = True