; -----------------------------------------------------------------------------
; Python Test Harness
; -----------------------------------------------------------------------------
;
; [Summary]  Gansu BLE Pro specific features
;
; [Author] Fred Chen
;
; [DateTime]   2020/12/21
; -----------------------------------------------------------------------------

[PRODUCT]
ProductReference = 'RBK69'
# USB Receiver
# USB_PID_GRAVITY_BLE_PRO: 0xC546
# USB_PID_MEZZY_BLE_PRO: 0xC548
# USB_PID_BOOT_MEZZY_BLE_PRO: 0xAB07
ProductID = 'C546 AAE9 C548 AB07'
# EQUAD_PID_GANSU BLE PRO
TransportID = ('B365',)
BluetoothPID = 'B365'
EQuadPID = 'B365'
IsMice = False

[PRODUCT/DEVICE]
MaxWaitSleep = 10
MaxWaitDeepSleep = 7200
KeyboardType = 'mechanical'
NbHosts = 3

[PRODUCT/DEVICE/FN_LOCK]
PWS_UX_V1_2 = True

# USB communication
[PRODUCT/USB_COMMUNICATION]
SetIdleSupported = True

# Feature 0x0000 version 2
[PRODUCT/FEATURES/IMPORTANT/ROOT]
Version_1 = False
Version_2 = True

# Feature 0x0001 version 2
[PRODUCT/FEATURES/IMPORTANT/FEATURE_SET]
Version_1 = False
Version_2 = True
FeatureCountInBLE = 0x1E
BootloaderFeatureCountInBLE = 0x05

# Feature 0x0003 version 4
[PRODUCT/FEATURES/COMMON/DEVICE_INFORMATION]
Enabled = True
Version_4 = True
EntityCount = 3
UnitId = ('B2DBD636',)
TransportUsb = False
TransportEQuad = False
BootLoaderTransportEQuad = False
TransportBTLE = True
TransportBT = False
ModelId = 'B36500000000'
ExtendedModelId = 0
CapabilitiesSerialNumber = True
FwType = ('01', '00', '05')
FwPrefix = ('BL1', 'RBK', '')
FwNumber = ('44', '69', '00')
Revision = ('00', '00', '00')
Build = ('9501', '9501', '0119')
TransportId = ('B365', 'B365', '0000')
ExtraVersionInformation = ('CCC57D2002', 'CCC57D2002', '0000000000')
BootLoaderTransportId = ('B365', 'B365', '0000')
SerialNumber = ('000000000000000000000000',)

# Feature 0x0005 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_TYPE_AND_NAME]
Enabled = True
Version_0 = True
MarketingName = 'Logi Pop Keys'
DeviceType = 0

# Feature 0x0007 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_FRIENDLY_NAME]
Enabled = True
Version_0 = True
NameMaxLength = 18

# Feature 0x1D4B version 0
[PRODUCT/FEATURES/COMMON/WIRELESS_DEVICE_STATUS]
Enabled = True

[PRODUCT/DEVICE/BATTERY]
MaximumVoltage = 3.1
NominalVoltage = 3.0
CutOffVoltage = 2.0

# Feature 0x1004 version 3
[PRODUCT/FEATURES/COMMON/UNIFIED_BATTERY]
Enabled = True
Version_3 = True
SupportedLevels = ('100', '50', '30', '5')
CapabilitiesFlags = ('0', '1', '0', '0')
DischargeSOCmV = ('3100', '2890', '2780', '2710', '2660', '2610', '2570', '2550', '2520', '2500', '2470', '2460', '2440', '2400', '2370', '2340', '2290', '2250', '2180', '2100', '2000')
StateOfChargeStep = 5

# Feature 0x1B04 version 5
[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS]
Enabled = True
Version_5 = True
CidCount = 20
CidListWithoutGhostKey = ('006E', '011C', '00E5', '00E7', '00E8', '0103')

[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS/CID_INFO_TABLE]
Enabled = True
FriendlyName                      = ('Host 1'               , 'Host 2'               , 'Host 3'               , 'Show Desktop'            , 'Screen Capture'          , 'Mute Microphone'        , 'Prev Track'              , 'Play Pause'           , 'Next Track'           , 'Mute'                 , 'Volume Down'          , 'Volume Up'            , 'Dictation'            , 'Smiling Face With Heart Shaped Eyes' , 'Loudly Crying Face'   , 'Emoji Smiley'         , 'Emoji Smiley With Tears' , 'Emoji Panel'          , 'Fn Lock'              , 'Fn Key'               ,)
Cid                               = ('0xD1'                 , '0xD2'                 , '0xD3'                 , '0x6E'                    , '0x10A'                   , '0x11C'                  , '0xE4'                    , '0xE5'                 , '0xE6'                 , '0xE7'                 , '0xE8'                 , '0xE9'                 , '0x103'                , '0x104'                               , '0x105'                , '0x106'                , '0x107'                   , '0x108'                , '0xDE'                 , '0x34'                 ,)
Task                              = ('0xAE'                 , '0xAF'                 , '0xB0'                 , '0x43'                    , '0xDF'                    , '0xF1'                   , '0x06'                    , '0x04'                 , '0x05'                 , '0x03'                 , '0x02'                 , '0x01'                 , '0xD8'                 , '0xD9'                                , '0xDA'                 , '0xDB'                 , '0xDC'                    , '0xDD'                 , '0x62'                 , '0x62'                 ,)
FlagVirtual                       = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                , 'False'                ,)
FlagPersist                       = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                , 'False'                ,)
FlagDivert                        = ('False'                , 'False'                , 'False'                , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                                , 'True'                 , 'True'                 , 'True'                    , 'True'                 , 'False'                , 'False'                ,)
FlagReprog                        = ('False'                , 'False'                , 'False'                , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                                , 'True'                 , 'True'                 , 'True'                    , 'True'                 , 'False'                , 'False'                ,)
FlagFnTog                         = ('True'                 , 'True'                 , 'True'                 , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                , 'False'                ,)
FlagHotKey                        = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'True'                 , 'True'                                , 'True'                 , 'True'                 , 'True'                    , 'True'                 , 'False'                , 'True'                 ,)
FlagFKey                          = ('True'                 , 'True'                 , 'True'                 , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'True'                 , 'False'                ,)
FlagMouse                         = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                , 'False'                ,)
Pos                               = ('0x01'                 , '0x02'                 , '0x03'                 , '0x04'                    , '0x05'                    , '0x06'                   , '0x07'                    , '0x08'                 , '0x09'                 , '0x0A'                 , '0x0B'                 , '0x0C'                 , '0x00'                 , '0x00'                                , '0x00'                 , '0x00'                 , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                 ,)
Group                             = ('0x00'                 , '0x00'                 , '0x00'                 , '0x00'                    , '0x00'                    , '0x00'                   , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                                , '0x00'                 , '0x00'                 , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                 ,)
GMask                             = ('0x00'                 , '0x00'                 , '0x00'                 , '0x00'                    , '0x00'                    , '0x00'                   , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                                , '0x00'                 , '0x00'                 , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                 ,)
AdditionalFlagsRawWheel           = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                , 'False'                ,)
AdditionalFlagsAnalyticsKeyEvents = ('True'                 , 'True'                 , 'True'                 , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                                , 'True'                 , 'True'                 , 'True'                    , 'True'                 , 'True'                 , 'True'                 ,)
AdditionalFlagsForceRawXY         = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                , 'False'                ,)
AdditionalFlagsRawXY              = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                               , 'False'                , 'False'                , 'False'                   , 'False'                , 'False'                , 'False'                ,)

# Feature 0x1814 version 1
[PRODUCT/FEATURES/COMMON/CHANGE_HOST]
Enabled = False
Version_1 = True

# Feature 0x1815 version 2
[PRODUCT/FEATURES/COMMON/HOSTS_INFO]
Enabled = True
Version_2 = True
SupportSetOSVersion = True
SupportSetName = True
SupportGetName = True
SupportBLEDescriptor = True
HostNameMaxLength = 24

# Feature 0x40A3
[PRODUCT/FEATURES/KEYBOARD/FN_INVERSION_FOR_MULTI_HOST_DEVICES]
Enabled = True
Version_0 = True
FnInversionDefaultState = 1
HasFnLock = True

# Feature 0x4220
# TODO

# Feature 0x4521
# TODO

# Feature 0x4513
# TODO

# Feature 0x00C2
# Foster BLE PRO doesn't support it
[PRODUCT/FEATURES/COMMON/DFU_CONTROL]
Enabled = False

# Feature 0x00C3 version 0
[PRODUCT/FEATURES/COMMON/SECURE_DFU_CONTROL]
Enabled = True
Version_0 = True
DfuControlTimeout = 30
DfuControlActionType = 1
DfuControlActionData = 0x000000

# Feature 0x00D0 version 3
[PRODUCT/FEATURES/COMMON/DFU]
Enabled = True
Version_3 = True
MagicString = "RBK69_D0"
UpgradableEntityTypes = ('0', '5')
ErrorLevel = 3
HexFileName = "gansu_ble_pro_prod.hex"
SoftDeviceDfuFileName = "gansu_ble_pro_s112_nrf52810_limit.dfu"
FlashWriteVerify = False
VerifyCmd3DoneAfterCmd1And2 = False
VerifyFlag = False
LowestApplicationAddress = 0x00019000
HighestApplicationAddress = 0x00031000
AdditionalAuthentication = True
EncryptCapabilities = ('3',)

# Feature 0x1802 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_RESET]
Enabled = True

# Feature 0x1803 version 0
# TODO

# Feature 0x1806 version 8
[PRODUCT/FEATURES/COMMON/CONFIGURABLE_DEVICE_PROPERTIES]
Version_8 = True

# Feature 0x1816 version 0
[PRODUCT/FEATURES/COMMON/BLE_PRO_PREPAIRING]
Enabled = True
Version_0 = True
KeysSupported = 0x67

# Feature 0x1805 version 0
[PRODUCT/FEATURES/COMMON/OOB_STATE]
Enabled = True
Version_0 = True

# Feature 0x1830 version 0
[PRODUCT/FEATURES/COMMON/POWER_MODES]
Enabled = True
Version_0 = True
TotalNumber = 4
NumberList = '0 1 2 3'
CurrentThresholdDeepSleep = 105

# Feature 0x18A1 version 0
# TODO

# Feature 0x1E00 version 0 (Enabled in PRODUCT.settings.ini)
[PRODUCT/FEATURES/COMMON/ENABLE_HIDDEN]
Enabled = True

# Feature 0x1E01 is now deprecated

# Feature 0x1E02
[PRODUCT/FEATURES/COMMON/MANAGE_DEACTIVATABLE_FEATURES_AUTH]
Enabled = True
Version_0 = True
SupportManufacturing = True
SupportCompliance = True
SupportGotthard = True
PersistentActivationManufacturing = False
PersistentActivationCompliance = False
PersistentActivationGotthard = True
AuthFeature = 0x1602

# Feature 0x1EB0 version 0
[PRODUCT/FEATURES/COMMON/TDE_ACCESS_TO_NVM]
Enabled = False
Version_0 = True
TdeMaxSize = 0x20

# Feature 0x1861 version 1
[PRODUCT/FEATURES/COMMON/BATTERY_LEVELS_CALIBRATION]
Enabled = True
Version_1 = True
RequiredCalibrationPointNb = 2
RequiredCalibrationPoints = ('07D0', '0C1C')
AdcCoefficient = 0.284516

# Feature 0x18B0
# TODO

# BLE PRO Features
[SHARED/DISCOVERY]
Enabled = True

[SHARED/PAIRING]
Enabled = True
BLEDevicePairing = True
PasskeyAuthenticationMethod = True
BLEProOsDetection = True
BLELatencyRemoval = True

[PRODUCT/DEVICE/CONNECTION_SCHEME]
MultipleChannels = True
MultipleEasySwitchButtons = True

[PRODUCT/DEVICE/CONNECTION_SCHEME/BLE_PRO_CS]
Enabled = True
Version_0 = True
SafePrePairedReceiver = True

[SHARED/DEVICES]
# List devices for each device dependent property
Type = ('1',)
Name = ('Logi Pop Keys',)
UnitIds_1 = ('B2DBD636', )
BLEProServiceVersion = ('01',)
ExtendedModelId = ('0',)
PrePairingAuthMethod = ('1',)
PasskeyAuthMethod = ('1',)
Passkey2ButtonsAuthMethod = ('0',)
AuthEntropy = ('20',)
RootFeatureVersion = ('2',)

[RECEIVER/ENUMERATION]
Number_Of_Pairing_Slots = 06

[PRODUCT/DEVICE/CONNECTION_SCHEME/DEVICE_RECOVERY]
Enabled = True
RecoveryKeysVariant = "kdb-recovery-keys-make_reset_kdb-recovery-keys-break"

[RECEIVER/TDE]
Enabled = False
Prepairing = False
Non_Volatile_Memory_Access_Size = 16
IRK = True
CSRK = False

[PRODUCT/HID_REPORT]
HidGuidelinesVersion = 2.0

[RUNTIME/DEBUGGERS]
Targets = ("Device"                , )
Types   = ("Quark256JlinkDebugger" , )

# Bug tracker SubSystem
[BUG_TRACKER]
Bug_Erasing_Leading_Zero = True