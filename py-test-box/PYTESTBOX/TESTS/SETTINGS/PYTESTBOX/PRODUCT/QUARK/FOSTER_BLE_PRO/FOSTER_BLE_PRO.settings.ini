; -----------------------------------------------------------------------------
; Python Test Harness
; -----------------------------------------------------------------------------
;
; [Summary]  Foster BLE Pro specific features
;
; [Author] Fred Chen
;
; [DateTime]   2020/06/19
; -----------------------------------------------------------------------------

[PRODUCT]
ProductReference = 'RBK68'
# USB Receiver
# USB_PID_GRAVITY_BLE_PRO: 0xC546
# USB_PID_MEZZY_BLE_PRO: 0xC548
# USB_PID_BOOT_MEZZY_BLE_PRO: 0xAB07
ProductID = 'C546 AAE9 C548 AB07'
# EQUAD_PID_FOSTER BLE PRO
TransportID = ('B363',)
BluetoothPID = 'B363'
EQuadPID = 'B363'
IsMice = False

[PRODUCT/DEVICE]
MaxWaitSleep = 10
MaxWaitDeepSleep = 7200
KeyboardType = 'membrane'
NbHosts = 3

[PRODUCT/DEVICE/FN_LOCK]
PWS_UX_V1_2 = True

[PRODUCT/NVS_CHUNK_IDS]
Enabled = True
ChunkIdNames = ('NVS_X1E02_STATE_ID', )
ChunkIdValues = ('0x0250', )

# USB communication
[PRODUCT/USB_COMMUNICATION]
SetIdleSupported = True

# Feature 0x0000 version 2
[PRODUCT/FEATURES/IMPORTANT/ROOT]
Version_1 = False
Version_2 = True

# Feature 0x0001 version 2
[PRODUCT/FEATURES/IMPORTANT/FEATURE_SET]
Version_1 = False
Version_2 = True
FeatureCountInBLE = 0x1F
BootloaderFeatureCountInBLE = 0x05

# Feature 0x0003 version 4
[PRODUCT/FEATURES/COMMON/DEVICE_INFORMATION]
Enabled = True
Version_4 = True
EntityCount = 3
UnitId = ('84BD0CD4',)
TransportUsb = False
TransportEQuad = False
BootLoaderTransportEQuad = False
TransportBTLE = True
TransportBT = False
ModelId = 'B36300000000'
ExtendedModelId = 0
CapabilitiesSerialNumber = True
FwType = ('01', '00', '05')
FwPrefix = ('BL1', 'RBK', '')
FwNumber = ('31', '68', '00')
Revision = ('00', '00', '00')
Build = ('9801', '9801', '00B8')
TransportId = ('B363', 'B363', '0000')
ExtraVersionInformation = ('ECF00E9403', 'ECF00E9403', '0000000000')
BootLoaderTransportId = ('B363', 'B363', '0000')
SerialNumber = ('000000000000000000000000',)

# Feature 0x0005 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_TYPE_AND_NAME]
Enabled = True
Version_0 = True
MarketingName = 'MX Keys for Business'
DeviceType = 0

# Feature 0x0007 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_FRIENDLY_NAME]
Enabled = True
Version_0 = True
NameMaxLength = 18

# Feature 0x00C2
# Foster BLE PRO doesn't support it
[PRODUCT/FEATURES/COMMON/DFU_CONTROL]
Enabled = False

# Feature 0x00C3 version 0
[PRODUCT/FEATURES/COMMON/SECURE_DFU_CONTROL]
Enabled = True
Version_0 = True
DfuControlTimeout = 30
DfuControlActionType = 1
DfuControlActionData = 0x000000

# Feature 0x00D0 version 3
[PRODUCT/FEATURES/COMMON/DFU]
Enabled = True
Version_3 = True
MagicString = "RBK68_D0"
UpgradableEntityTypes = ('0', '5')
ErrorLevel = 3
HexFileName = "foster_ble_pro_prod.hex"
SoftDeviceDfuFileName = "foster_ble_pro_s112_nrf52810_limit.dfu"
FlashWriteVerify = False
VerifyCmd3DoneAfterCmd1And2 = False
VerifyFlag = False
LowestApplicationAddress = 0x00019000
HighestApplicationAddress = 0x00031000
AdditionalAuthentication = True
EncryptCapabilities = ('3',)

[PRODUCT/DEVICE/BATTERY]
MaximumVoltage = 4.2
NominalVoltage = 4.0
CutOffVoltage = 3.6

# Feature 0x1004 version 2
[PRODUCT/FEATURES/COMMON/UNIFIED_BATTERY]
Enabled = True
Version_2 = True
SupportedLevels = ('100', '50', '30', '10')
CapabilitiesFlags = ('1', '1', '0')
DischargeSOCmV = ('4170', '4120', '4080', '4040', '3980', '3950', '3920', '3890', '3860', '3830', '3810', '3790', '3780', '3770', '3760', '3750', '3740', '3720', '3700', '3680', '3590')
RechargeSOCmV = ('4200', '4200', '4200', '4200', '4140', '4090', '4060', '4030', '4020', '4000', '3980', '3970', '3960', '3940', '3930', '3910', '3900', '3880', '3860', '3730', '3700')
StateOfChargeStep = 5

# Feature 0x1802 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_RESET]
Enabled = True

# Feature 0x1803 version 0
# TODO

# Feature 0x1805 version 0
[PRODUCT/FEATURES/COMMON/OOB_STATE]
Enabled = True
Version_0 = True

# Feature 0x1806 version 8
[PRODUCT/FEATURES/COMMON/CONFIGURABLE_DEVICE_PROPERTIES]
Version_8 = True

# Feature 0x1814 version 1
[PRODUCT/FEATURES/COMMON/CHANGE_HOST]
Enabled = False
Version_1 = True

# Feature 0x1815 version 1
[PRODUCT/FEATURES/COMMON/HOSTS_INFO]
Enabled = True
Version_1 = True
SupportSetOSVersion = True
SupportSetName = True
SupportGetName = True
SupportBTDescriptor = True
HostNameMaxLength = 24
HostBusType = 4

# Feature 0x1816 version 0
[PRODUCT/FEATURES/COMMON/BLE_PRO_PREPAIRING]
Enabled = True
Version_0 = True
KeysSupported = 0x67

# Feature 0x1830 version 0
[PRODUCT/FEATURES/COMMON/POWER_MODES]
Enabled = True
Version_0 = True
TotalNumber = 4
NumberList = '0 1 2 3'
CurrentThresholdDeepSleep = 150

# Feature 0x1861 version 0
[PRODUCT/FEATURES/COMMON/BATTERY_LEVELS_CALIBRATION]
Enabled = True
Version_0 = True
RequiredCalibrationPointNb = 2
RequiredCalibrationPoints = ('0E10', '1068')
AdcCoefficient = 0.2109

# Feature 0x18A1 version 0
# TODO

# Feature 0x18B0
# TODO

# Feature 0x1982
# TODO

# Feature 0x1A20
# TODO

# Feature 0x1B04 version 5
[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS]
Enabled = True
Version_5 = True
CidCount = 24
CidListWithoutGhostKey = ('00C7', '00E6', '011C', '00E3', '010A', '000A')

[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS/CID_INFO_TABLE]
Enabled = True
FriendlyName                      = ('Host 1'               , 'Host 2'               , 'Host 3'               , 'Brightness Down'         , 'Brightness Up'           , 'Backlight Down'         , 'Backlight Up'            , 'Dictation'            , 'Emoji Panel'          , 'Mute Microphone'      , 'Prev Track'           , 'Play Pause'           , 'Next Track'           , 'Mute'                 , 'Volume Down'          , 'Volume Up'            , 'Calculator'           , 'Screen Capture'       , 'Menu Right Click'     , 'Lock Screen'          , 'Left Arrow'           , 'Right Arrow'          , 'Fn Lock'              , 'FN Key'               ,)
Cid                               = ('0xD1'                 , '0xD2'                 , '0xD3'                 , '0xC7'                    , '0xC8'                    , '0xE2'                   , '0xE3'                    , '0x103'                , '0x108'                , '0x11C'                , '0xE4'                 , '0xE5'                 , '0xE6'                 , '0xE7'                 , '0xE8'                 , '0xE9'                 , '0x0A'                 , '0x10A'                , '0xEA'                 , '0x6F'                 , '0xEC'                 , '0xEB'                 , '0xDE'                 , '0x34'                 ,)
Task                              = ('0xAE'                 , '0xAF'                 , '0xB0'                 , '0xA3'                    , '0xA4'                    , '0xC1'                   , '0xC2'                    , '0xD8'                 , '0xDD'                 , '0xF1'                 , '0x06'                 , '0x04'                 , '0x05'                 , '0x03'                 , '0x02'                 , '0x01'                 , '0x0A'                 , '0xDF'                 , '0xC3'                 , '0x44'                 , '0xB8'                 , '0xB6'                 , '0x62'                 , '0x62'                 ,)
FlagVirtual                       = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagPersist                       = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagDivert                        = ('True'                 , 'True'                 , 'True'                 , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                ,)
FlagReprog                        = ('False'                , 'False'                , 'False'                , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagFnTog                         = ('False'                , 'False'                , 'False'                , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagHotKey                        = ('True'                 , 'True'                 , 'True'                 , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'True'                 ,)
FlagFKey                          = ('False'                , 'False'                , 'False'                , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'True'                 , 'False'                ,)
FlagMouse                         = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
Pos                               = ('0x00'                 , '0x00'                 , '0x00'                 , '0x01'                    , '0x02'                    , '0x03'                   , '0x04'                    , '0x05'                 , '0x06'                 , '0x07'                 , '0x08'                 , '0x09'                 , '0x0A'                 , '0x0B'                 , '0x0C'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 ,)
Group                             = ('0x00'                 , '0x00'                 , '0x00'                 , '0x00'                    , '0x00'                    , '0x00'                   , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 ,)
GMask                             = ('0x00'                 , '0x00'                 , '0x00'                 , '0x00'                    , '0x00'                    , '0x00'                   , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 ,)
AdditionalFlagsRawWheel           = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
AdditionalFlagsAnalyticsKeyEvents = ('True'                 , 'True'                 , 'True'                 , 'True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 ,)
AdditionalFlagsForceRawXY         = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
AdditionalFlagsRawXY              = ('False'                , 'False'                , 'False'                , 'False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)

# Feature 0x1D4B version 0
[PRODUCT/FEATURES/COMMON/WIRELESS_DEVICE_STATUS]
Enabled = True

# Feature 0x1DF3
[PRODUCT/FEATURES/COMMON/EQUAD_DJ_DEBUG_INFO]
Enabled = False

# Feature 0x1E00 version 0 (Enabled in PRODUCT.settings.ini)
[PRODUCT/FEATURES/COMMON/ENABLE_HIDDEN]
Enabled = True

# Feature 0x1E01 is now deprecated

# Feature 0x1E02
[PRODUCT/FEATURES/COMMON/MANAGE_DEACTIVATABLE_FEATURES_AUTH]
Enabled = True
Version_0 = True
SupportManufacturing = True
SupportCompliance = True
SupportGotthard = True
PersistentActivationManufacturing = False
PersistentActivationCompliance = False
PersistentActivationGotthard = True
AuthFeature = 0x1602

# Feature 0x1EB0 version 0
[PRODUCT/FEATURES/COMMON/TDE_ACCESS_TO_NVM]
Enabled = False
Version_0 = True
TdeMaxSize = 0x20

# Feature 0x40A3
[PRODUCT/FEATURES/KEYBOARD/FN_INVERSION_FOR_MULTI_HOST_DEVICES]
Enabled = True
Version_0 = True
FnInversionDefaultState = 1
HasFnLock = True

# Feature 0x4521
# TODO

# Feature 0x4531 version 1
[PRODUCT/FEATURES/KEYBOARD/MULTI_PLATFORM]
Enabled = True
Version_1 = True
# platform descriptor
OsMask = ('1', '32', '64', '16')
# platform info
OsDetection = True
SetHostPlatform = True

# BLE PRO Features
[SHARED/DISCOVERY]
Enabled = True

[SHARED/PAIRING]
Enabled = True
BLEDevicePairing = True
PasskeyAuthenticationMethod = True
BLEProOsDetection = True
BLELatencyRemoval = True

[PRODUCT/DEVICE/CONNECTION_SCHEME]
MultipleChannels = True
MultipleEasySwitchButtons = True

[PRODUCT/DEVICE/CONNECTION_SCHEME/BLE_PRO_CS]
Enabled = True
Version_0 = True
SafePrePairedReceiver = True

[SHARED/DEVICES]
# List devices for each device dependent property
Type = ('1',)
Name = ('MX Keys B',)
UnitIds_1 = ('84BD0CD4', )
BLEProServiceVersion = ('01',)
ExtendedModelId = ('0',)
PrePairingAuthMethod = ('1',)
PasskeyAuthMethod = ('1',)
Passkey2ButtonsAuthMethod = ('0',)
AuthEntropy = ('20',)
RootFeatureVersion = ('2',)

[RECEIVER/ENUMERATION]
Number_Of_Pairing_Slots = 06

[PRODUCT/DEVICE/CONNECTION_SCHEME/DEVICE_RECOVERY]
Enabled = True
RecoveryKeysVariant = "kdb-recovery-keys-make_reset_kdb-recovery-keys-break"

[RECEIVER/TDE]
Enabled = False
Prepairing = False
Non_Volatile_Memory_Access_Size = 16
IRK = True
CSRK = False

[PRODUCT/HID_REPORT]
HidGuidelinesVersion = 2.0

[RUNTIME/DEBUGGERS]
Targets = ("Device"                , )
Types   = ("Quark256JlinkDebugger" , )

# Bug tracker SubSystem
[BUG_TRACKER]
Bug_Foster_DisableFeatures_Gotthard = True
Bug_Foster_ShowBatteryStatus_NotAllowed = True
Bug_Erasing_Leading_Zero = True

