; -----------------------------------------------------------------------------
; Python Test Harness
; -----------------------------------------------------------------------------
;
; [Summary]  Pamir specific features
;
; [Author] Masan Xu
;
; [DateTime]   2023/09/24

; -----------------------------------------------------------------------------

[PRODUCT]
ProductReference = 'RBK85'
ProductID = 'C548 AB07'
TransportID = ('B37F',)
BluetoothPID = 'B37F'
EQuadPID = 'B37F'

[PRODUCT/DEVICE]
MaxWaitSleep = 10
MaxWaitDeepSleep = 7200
KeyboardType = 'membrane'
NbHosts = 1

[PRODUCT/DEVICE/BATTERY]
MaximumVoltage = 3.1
NominalVoltage = 3
CutOffVoltage = 2.0

[PRODUCT/DEVICE/CONNECTION_SCHEME]
MultipleChannels = True
MultipleEasySwitchButtons = False

[PRODUCT/DEVICE/CONNECTION_SCHEME/BLE_PRO_CS]
Enabled = True
Version_0 = True
SafePrePairedReceiver = True

[PRODUCT/DEVICE/CONNECTION_SCHEME/DEVICE_RECOVERY]
Enabled = True
RecoveryKeysVariant = "kdb-recovery-keys-make_reset_kdb-recovery-keys-break"

[PRODUCT/HID_REPORT]
HidGuidelinesVersion = 2.4
HidKeyboardType = 'HidKeyboard'
ProductSpecificUsages = ('',)

[PRODUCT/NVS_CHUNK_IDS]
Enabled = True

[PRODUCT/NVS_UICR]
MagicNumber = True

[PRODUCT/PROTOCOLS/BLE]
Enabled = True
OsDetection = True
ChromeSupport = True
HidReportMap = "HidReportMap"
Software_Revision = ('00590A0126',)

[PRODUCT/PROTOCOLS/BLE/ADVERTISING]
SwiftPairCapability = True
TxPower = 0x04
AuthenticationType = 0x01
DeviceType = 0x01
BootloaderReconnectionAdvertisingCompleteWindowS = 40
BootloaderReconnectionAdvertisingFirstHdcSubWindowS = 5
BootloaderReconnectionAdvertisingHdcSubWindowS = 1.28
BootloaderReconnectionAdvertisingLcdSubWindowS = 15
BootloaderReconnectionAdvertisingLcdIntervalMs = 20
BootloaderRecoveryAdvertisingCompleteWindowS = 40


[PRODUCT/PROTOCOLS/BLE_PRO]
Enabled = True
Version_1 = False
Version_2 = True

# Feature 0x0000 version 2
[PRODUCT/FEATURES/IMPORTANT/ROOT]
Version_1 = False
Version_2 = True
ProtocolNum = [04]
TargetSW = [05]

# Feature 0x0001 version 2
[PRODUCT/FEATURES/IMPORTANT/FEATURE_SET]
Enabled = True
Version_1 = False
Version_2 = True
FeatureCountInBLE = 0x1D
BootloaderFeatureCountInBLE = 0x05

# Feature 0x0003 version 4
[PRODUCT/FEATURES/COMMON/DEVICE_INFORMATION]
Enabled = True
Version_4 = True
EntityCount = 3
UnitId = ('7674C361', 'FAE669B1')
TransportUsb = False
TransportEQuad = False
TransportBTLE = True
TransportBT = False
ModelId = 'B37F00000000'
ExtendedModelId = 0
CapabilitiesSerialNumber = True
FwType = ('01', '00', '05')
FwPrefix = ('BL1', 'RBK', '')
FwNumber = ('98', '85', '00')
Revision = ('00', '00', '00')
Build = ('0004', '0004', '0126')
TransportId = ('B37F', 'B37F', '0000')
BootLoaderTransportId = ('B37F', '0000', '0000')

# Feature 0x0005 version 2
[PRODUCT/FEATURES/COMMON/DEVICE_TYPE_AND_NAME]
Enabled = True
Version_2 = True
MarketingName = 'K370 for Business'
DeviceType = 0

# Feature 0x0007 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_FRIENDLY_NAME]
Enabled = True
Version_0 = True
NameMaxLength = 14

# Feature 0x0011 version 0
[PRODUCT/FEATURES/COMMON/PROPERTY_ACCESS]
Enabled = True
Version_0 = True
SwAccessibleProperties = ('EXTENDED_MODEL_ID', 'KEYBOARD_LAYOUT', 'SERIAL_NUMBER', 'HIDPP_DEVICE_NAME', 'SOFTWARE_EXTRA_INFORMATION')
SwAccessiblePropertiesSizes = ('EXTENDED_MODEL_ID:1', 'KEYBOARD_LAYOUT:1', 'SERIAL_NUMBER:12', 'HIDPP_DEVICE_NAME:50', 'SOFTWARE_EXTRA_INFORMATION:16')

# Feature 0x00C2
[PRODUCT/FEATURES/COMMON/DFU_CONTROL]
Enabled = False

# Feature 0x00C3 version 0
[PRODUCT/FEATURES/COMMON/SECURE_DFU_CONTROL]
Enabled = True
Version_0 = True
DfuControlTimeout = 30
DfuControlActionType = 1
DfuControlActionData = 0x000000

# Feature 0x00D0 version 3
[PRODUCT/FEATURES/COMMON/DFU]
Enabled = True
Version_3 = True
MagicString = "RBK85_D0A"
UpgradableEntityTypes = ('0', '5')
ErrorLevel = 3
HexFileName = "pamir_prod.hex"
SoftDeviceDfuFileName = "pamir_s112_nrf52810_limit.dfu"
FlashWriteVerify = False
VerifyCmd3DoneAfterCmd1And2 = False
VerifyFlag = False
LowestApplicationAddress = 0x00019000
HighestApplicationAddress = 0x00033000
AdditionalAuthentication = True
EncryptCapabilities = ('3',)
DfuStartSecurLvl = 0

# Feature 0x1004 version 3
[PRODUCT/FEATURES/COMMON/UNIFIED_BATTERY]
Enabled = True
Version_3 = True
SupportedLevels = ('100', '50', '30', '5')
CapabilitiesFlags = ('0', '1', '0', '0')
DischargeSOCmV = ('3035', '2845', '2760', '2700', '2650', '2590', '2550', '2535', '2510', '2485', '2470', '2460', '2440', '2400', '2360', '2325', '2280', '2225', '2150', '2060', '2000')
RechargeSOCmV = ()
StateOfChargeStep = 5

# Feature 0x1602 version 0
[PRODUCT/FEATURES/COMMON/PASSWORD_AUTHENTICATION]
Enabled = True
Version_0 = True
ConstantCredentials = True
FullAuthentication = False
SupportLongPassword = False

# Feature 0x1802 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_RESET]
Enabled = True

# Feature 0x1803 version 0
[PRODUCT/FEATURES/COMMON/GPIO_ACCESS]
Enabled = True
Version_0 = True
NumberOfPorts = 1
GpioInputMask = ('0F700000',)
GpioInputValue = ('00000000',)
GpioOutputMask = ('F08FFFFF',)
GpioOutputValue = ('F08007F0',)
GpioUnusedMask = ('00000000',)
GpioForbiddenMask = ('00000000',)

# Feature 0x1805 version 0
[PRODUCT/FEATURES/COMMON/OOB_STATE]
Enabled = True
Version_0 = True

# Feature 0x1807 version 3
[PRODUCT/FEATURES/COMMON/CONFIGURABLE_PROPERTIES]
Enabled = True
Version_3 = True
SupportedProperties = ('EXTENDED_MODEL_ID', 'KEYBOARD_LAYOUT', 'BLE_GAP_ADV_OUTPUT_POWER', 'SERIAL_NUMBER', 'HIDPP_DEVICE_NAME', 'USB_VID', 'BLE_GAP_APP_NAME', 'BLE_GAP_BL_ADV_NAME_SIZE', 'BLE_GAP_APP_ADV_NAME_SIZE', 'BLE_GAP_BL_SR_NAME_SIZE', 'BLE_GAP_APP_SR_NAME_SIZE', 'BLE_DIS_BL_PID', 'BLE_DIS_APP_PID', 'BLE_DIS_MANUFACTURER_NAME', 'BLE_DIS_BL_MODEL_NUMBER', 'BLE_DIS_APP_MODEL_NUMBER', 'SOFTWARE_EXTRA_INFORMATION')
SpecificPropertiesSizes = ('EXTENDED_MODEL_ID:1', 'KEYBOARD_LAYOUT:1', 'BLE_GAP_ADV_OUTPUT_POWER:1', 'SERIAL_NUMBER:12', 'HIDPP_DEVICE_NAME:50', 'USB_VID:2', 'BLE_GAP_APP_NAME:14', 'BLE_GAP_BL_ADV_NAME_SIZE:1', 'BLE_GAP_APP_ADV_NAME_SIZE:1', 'BLE_GAP_BL_SR_NAME_SIZE:1', 'BLE_GAP_APP_SR_NAME_SIZE:1', 'BLE_DIS_BL_PID:2', 'BLE_DIS_APP_PID:2', 'BLE_DIS_MANUFACTURER_NAME:32', 'BLE_DIS_BL_MODEL_NUMBER:32', 'BLE_DIS_APP_MODEL_NUMBER:32', 'SOFTWARE_EXTRA_INFORMATION:16')

# Feature 0x1814 version 1, only for setting NbHost for the other features
[PRODUCT/FEATURES/COMMON/CHANGE_HOST]
Enabled = False
Version_1 = True

# Feature 0x1815 version 2
[PRODUCT/FEATURES/COMMON/HOSTS_INFO]
Enabled = True
Version_2 = True
SupportSetOSVersion = True
SupportSetName = True
SupportGetName = True
SupportBLEDescriptor = True
HostNameMaxLength = 24

# Feature 0x1816 version 0
[PRODUCT/FEATURES/COMMON/BLE_PRO_PREPAIRING]
Enabled = True
Version_0 = True
KeysSupported = 0x67

# Feature 0x1830 version 0
[PRODUCT/FEATURES/COMMON/POWER_MODES]
Enabled = True
Version_0 = True
TotalNumber = 4
NumberList = '0 1 2 3'
CurrentThresholdDeepSleep = 150

# Feature 0x1861 version 1
[PRODUCT/FEATURES/COMMON/BATTERY_LEVELS_CALIBRATION]
Enabled = True
Version_1 = True
RequiredCalibrationPointNb = 2
RequiredCalibrationPoints = ('07D0', '0C1C')
AdcCoefficient = 0.2844

# Feature 0x1891 version 8
# TODO

# Feature 0x18A1 version 0
# TODO

# Feature 0x18B0 version 1
# TODO

# Feature 0x1B04 version 6
[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS]
Enabled = True
Version_6 = True
CidCount = 26
#(Play/Pause, Mute, Volume Done, Volume Up, Show Desktop, Home)
CidListWithoutGhostKey = ('00E5', '00E7', '00E8', '00E9', '006E', '0118')
SupportResetAllCidReportSettings = True

[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS/CID_INFO_TABLE]
Enabled = True
FriendlyName                      = ('F1'   , 'F2'   , 'F3'   , 'F4',    'F5'   , 'F6'   , 'F7'   , 'F8'   , 'F9'   , 'F10'  , 'F11'  , 'F12'  , 'Play/Pause', 'Mute' , 'Volume Down', 'Volume Up', 'Brightness Down', 'Brightness Up', 'Show Desktop', 'Lock Screen', 'Screen Capture', 'Calculator', 'Insert', 'Home' , 'End'  , 'Host 1',)
Cid                               = ('0xF6' , '0xEF' , '0xF0' , '0xF1' , '0xF2' , '0xF3' , '0xF4' , '0xF5' , '0x14D', '0x14E', '0x14F', '0x150', '0xE5'      , '0xE7' , '0xE8'       , '0xE9'     , '0xC7'           , '0xC8'         , '0x6E'        , '0x6F'       , '0x10A'         , '0x0A'      , '0x116' , '0x118', '0x119', '0xD1'  ,)
Task                              = ('0xCD' , '0xC6' , '0xC7' , '0xC8' , '0xC9' , '0xCA' , '0xCB' , '0xCC' , '0xFE' , '0xFF' , '0x100', '0x101', '0x04'      , '0x03' , '0x02'       , '0x01'     , '0xA3'           , '0xA4'         , '0x43'        , '0x44'       , '0xDF'          , '0x0A'      , '0xEB'  , '0xED' , '0xEE' , '0xAE'  ,)
FlagVirtual                       = ('False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False'     , 'False', 'False'      , 'False'    , 'False'          , 'False'        , 'False'       , 'False'      , 'False'         , 'False'     , 'False' , 'False', 'False', 'False' ,)
FlagPersist                       = ('False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False'     , 'False', 'False'      , 'False'    , 'False'          , 'False'        , 'False'       , 'False'      , 'False'         , 'False'     , 'False' , 'False', 'False', 'False' ,)
FlagDivert                        = ('True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True'      , 'True' , 'True'       , 'True'     , 'True'           , 'True'         , 'True'        , 'True'       , 'True'          , 'True'      , 'False' , 'False', 'False', 'False' ,)
FlagReprog                        = ('True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True'      , 'True' , 'True'       , 'True'     , 'True'           , 'True'         , 'True'        , 'True'       , 'True'          , 'True'      , 'False' , 'False', 'False', 'False' ,)
FlagFnTog                         = ('False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False'     , 'False', 'False'      , 'False'    , 'False'          , 'False'        , 'False'       , 'False'      , 'False'         , 'False'     , 'False' , 'False', 'False', 'False' ,)
FlagHotKey                        = ('False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'True'      , 'True' , 'True'       , 'True'     , 'True'           , 'True'         , 'True'        , 'True'       , 'True'          , 'True'      , 'True'  , 'True' , 'True' , 'True'  ,)
FlagFKey                          = ('True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'False'     , 'False', 'False'      , 'False'    , 'False'          , 'False'        , 'False'       , 'False'      , 'False'         , 'False'     , 'False' , 'False', 'False', 'False' ,)
FlagMouse                         = ('False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False'     , 'False', 'False'      , 'False'    , 'False'          , 'False'        , 'False'       , 'False'      , 'False'         , 'False'     , 'False' , 'False', 'False', 'False' ,)
Pos                               = ('0x01' , '0x02' , '0x03' , '0x04' , '0x05' , '0x06' , '0x07' , '0x08' , '0x09' , '0x0A' , '0x0B' , '0x0C' , '0x00'      , '0x00' , '0x00'       , '0x00'     , '0x00'           , '0x00'         , '0x00'        , '0x00'       , '0x00'          , '0x00'      , '0x00'  , '0x00' , '0x00' , '0x00'  ,)
Group                             = ('0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00'      , '0x00' , '0x00'       , '0x00'     , '0x00'           , '0x00'         , '0x00'        , '0x00'       , '0x00'          , '0x00'      , '0x00'  , '0x00' , '0x00' , '0x00'  ,)
GMask                             = ('0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00' , '0x00'      , '0x00' , '0x00'       , '0x00'     , '0x00'           , '0x00'         , '0x00'        , '0x00'       , '0x00'          , '0x00'      , '0x00'  , '0x00' , '0x00' , '0x00'  ,)
AdditionalFlagsRawWheel           = ('False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False'     , 'False', 'False'      , 'False'    , 'False'          , 'False'        , 'False'       , 'False'      , 'False'         , 'False'     , 'False' , 'False', 'False', 'False' ,)
AdditionalFlagsAnalyticsKeyEvents = ('True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True' , 'True'      , 'True' , 'True'       , 'True'     , 'True'           , 'True'         , 'True'        , 'True'       , 'True'          , 'True'      , 'True'  , 'True' , 'True' , 'True'  ,)
AdditionalFlagsForceRawXY         = ('False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False'     , 'False', 'False'      , 'False'    , 'False'          , 'False'        , 'False'       , 'False'      , 'False'         , 'False'     , 'False' , 'False', 'False', 'False' ,)
AdditionalFlagsRawXY              = ('False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'False'     , 'False', 'False'      , 'False'    , 'False'          , 'False'        , 'False'       , 'False'      , 'False'         , 'False'     , 'False' , 'False', 'False', 'False' ,)

# Feature 0x1D4B version 0
[PRODUCT/FEATURES/COMMON/WIRELESS_DEVICE_STATUS]
Enabled = True

# Feature 0x1E00 version 0
[PRODUCT/FEATURES/COMMON/ENABLE_HIDDEN]
Enabled = True

# Feature 0x1E02 version 0
[PRODUCT/FEATURES/COMMON/MANAGE_DEACTIVATABLE_FEATURES_AUTH]
Enabled = True
Version_0 = True
SupportManufacturing = True
SupportCompliance = True
SupportGotthard = True
PersistentActivationManufacturing = False
PersistentActivationCompliance = False
PersistentActivationGotthard = True
AuthFeature = 0x1602

# Feature 0x1EB0 version 0
[PRODUCT/FEATURES/COMMON/TDE_ACCESS_TO_NVM]
Enabled = True
Version_0 = True
TdeMaxSize = 0x20

# Feature 0x4220 version 0
[PRODUCT/FEATURES/KEYBOARD/LOCK_KEY_STATE]
Enabled = True
Version_0 = True

# Feature 0x4521 version 0
[PRODUCT/FEATURES/KEYBOARD/DISABLE_KEYS]
Enabled = True
Version_0 = True
CapsLock = True
NumLock = True
ScrollLock = True
Insert = True
Windows = True
DefaultDisabledKeys = 0

# Feature 0x4531 version 1
[PRODUCT/FEATURES/KEYBOARD/MULTI_PLATFORM]
Enabled = True
Version_1 = True
# platform descriptor
OsMask = ('21', '32', '64')
PlatformSource = ('0', '0', '0')
PlatformIndex = ('0', '255', '255')
AutoPlatform = ('255', '255', '255')
AutoDescriptor = ('255', '255', '255')
# platform info
OsDetection = True
SetHostPlatform = True

# Feature 0x4540 version 0
[PRODUCT/FEATURES/KEYBOARD/KEYBOARD_INTERNATIONAL_LAYOUTS]
Enabled = True
KeyboardLayout = 1

[RECEIVER/ENUMERATION]
Number_Of_Pairing_Slots = 06

[RECEIVER/TDE]
Enabled = False
Prepairing = False
Non_Volatile_Memory_Access_Size = 16
IRK = True
CSRK = False

[SHARED/DEVICES]
# List devices for each device dependent property
Type = ('1',)
Name = ('LOGI K370 B',)
UnitIds_1 = ('7674C361', 'FAE669B1')
BLEProServiceVersion = ('01',)
ExtendedModelId = ('0',)
PrePairingAuthMethod = ('1',)
PasskeyAuthMethod = ('1',)
Passkey2ButtonsAuthMethod = ('0',)
AuthEntropy = ('20',)
RootFeatureVersion = ('2',)

# BLE PRO Features
[SHARED/DISCOVERY]
Enabled = True

[SHARED/PAIRING]
Enabled = True
BLEDevicePairing = True
PasskeyAuthenticationMethod = True
BLEProOsDetection = True
BLELatencyRemoval = True

[RUNTIME]
UsbContextClass = "pytransport.usb.logiusbcontext.logiusbcontext.LogiusbUsbContext"

[RUNTIME/DEBUGGERS]
Targets = ("Device"                , )
Types   = ("Quark256JlinkDebugger" , )

[BUG_TRACKER]
Bug_AnalyticsKeyEvents_CID_Packing = True
Bug_Erasing_Leading_Zero = True