; -----------------------------------------------------------------------------
; Python Test Harness
; -----------------------------------------------------------------------------
;
; [Summary]  Norman specific features
;
; [Author] Fred Chen
;
; [DateTime]   2022/06/17
; -----------------------------------------------------------------------------

[PRODUCT]
ProductReference = 'RBK81'
ProductID = 'C548 AB07'
TransportID = ('B378',)
BluetoothPID = 'B378'
EQuadPID = 'B378'
IsMice = False

[PRODUCT/DEVICE]
MaxWaitSleep = 10
MaxWaitDeepSleep = 7200
KeyboardType = 'membrane'
NbHosts = 3

[PRODUCT/DEVICE/BATTERY]
MaximumVoltage = 4.2
NominalVoltage = 4.0
CutOffVoltage = 3.52

[PRODUCT/DEVICE/CONNECTION_SCHEME]
MultipleChannels = True
MultipleEasySwitchButtons = True

[PRODUCT/DEVICE/CONNECTION_SCHEME/BLE_PRO_CS]
Enabled = True
Version_0 = True
SafePrePairedReceiver = True

[PRODUCT/DEVICE/CONNECTION_SCHEME/DEVICE_RECOVERY]
Enabled = True
RecoveryKeysVariant = "kdb-recovery-keys-make_reset_kdb-recovery-keys-break"

[PRODUCT/DEVICE/FN_LOCK]
PWS_UX_V1_2 = True

[PRODUCT/FEATURES/KEYBOARD]
GhostKeyDetection = True
# Re-enable GhostKeys test suite only when firmware code aligned with specification
GhostKeys = False

[PRODUCT/HID_REPORT]
HidGuidelinesVersion = 2.6
HidKeyboardType = 'HidKeyboard'
ProductSpecificUsages = ('BRIGHTNESS_DOWN', 'BRIGHTNESS_UP', 'VOICE_DICTATION', 'EMOJI_PICKER', 'START_OR_STOP_MICROPHONE_CAPTURE', 'SCAN_PREVIOUS_TRACK', 'PLAY_PAUSE', 'SCAN_NEXT_TRACK', 'MUTE', 'VOLUME_DOWN', 'VOLUME_UP','AL_CALCULATOR', 'POWER',)
TopRowUsagesCount = 0x0C

[PRODUCT/NVS_CHUNK_IDS]
Enabled = True
ChunkIdNames = ('NVS_LEDBKLT_ID', )
ChunkIdValues = ('0x0009', )

[PRODUCT/PROTOCOLS/BLE]
Enabled = True
HidReportMap = "HidReportMap"
Spaces_Specifications = False
ChromeSupport = True
OsDetection = True
Software_Revision = ('00590A0126',)

[PRODUCT/PROTOCOLS/BLE_PRO]
Enabled = True
Version_1 = True

[PRODUCT/PROTOCOLS/BLE/ADVERTISING]
SwiftPairCapability = True
TxPower = 0x04
AuthenticationType = 0x01
DeviceType = 0x01
BootloaderReconnectionAdvertisingCompleteWindowS = 40
BootloaderReconnectionAdvertisingFirstHdcSubWindowS = 5
BootloaderReconnectionAdvertisingHdcSubWindowS = 1.28
BootloaderReconnectionAdvertisingLcdSubWindowS = 15
BootloaderReconnectionAdvertisingLcdIntervalMs = 20
BootloaderRecoveryAdvertisingCompleteWindowS = 40

[PRODUCT/LATENCY/SWITCH_LATENCY]
Enabled = True
# Switch latency on BLE Pro or BLE pro in run mode in us
MinSwitchLatencyRunMode = 200
AvgPressLatencyRunMode = 16000
Percentile95PressLatencyRunMode = 32000
AvgReleaseLatencyRunMode = 16000
Percentile95ReleaseLatencyRunMode = 32000
# Switch latency time on BLE or BLE Pro or LS2 in sleep mode in us
MinSwitchLatencySleepMode = 200
AvgSwitchLatencySleepMode = 16000
Percentile95SwitchLatencySleepMode = 32000
# Switch latency time on BLE or BLE Pro or LS2 in deep sleep mode in us
MinSwitchLatencyDeepSleepMode = 10000
AvgSwitchLatencyDeepSleepMode = 120000
Percentile95SwitchLatencyDeepSleepMode = 240000

# USB communication
[PRODUCT/USB_COMMUNICATION]
SetIdleSupported = True

# Feature 0x0000 version 2
[PRODUCT/FEATURES/IMPORTANT/ROOT]
Version_1 = False
Version_2 = True

# Feature 0x0001 version 2
[PRODUCT/FEATURES/IMPORTANT/FEATURE_SET]
Version_1 = False
Version_2 = True
FeatureCountInBLE = 0x21
BootloaderFeatureCountInBLE = 0x05

# Feature 0x0003 version 4
[PRODUCT/FEATURES/COMMON/DEVICE_INFORMATION]
Enabled = True
Version_4 = True
EntityCount = 3
UnitId = ('2217AF59', 'BE8B3E6C', '17E250B7',)
TransportUsb = False
TransportEQuad = False
BootLoaderTransportEQuad = False
TransportBTLE = True
TransportBT = False
ModelId = 'B37800000000'
ExtendedModelId = 0
CapabilitiesSerialNumber = True
FwType = ('01', '00', '05')
FwPrefix = ('BL1', 'RBK', '')
FwNumber = ('88', '81', '00')
Revision = ('01', '01', '00')
Build = ('0015', '0015', '0126')
TransportId = ('B378', 'B378', '0000')
BootLoaderTransportId = ('B378', '0000', '0000')
SerialNumber = ('000000000000000000000000',)

# Feature 0x0005 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_TYPE_AND_NAME]
Enabled = True
Version_0 = True
MarketingName = 'MX Keys S'
DeviceType = 0

# Feature 0x0007 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_FRIENDLY_NAME]
Enabled = True
Version_0 = True
NameMaxLength = 14

# Feature 0x0011 version 0
[PRODUCT/FEATURES/COMMON/PROPERTY_ACCESS]
Enabled = True
Version_0 = True
SwAccessibleProperties = ('EXTENDED_MODEL_ID', 'KEYBOARD_LAYOUT', 'SERIAL_NUMBER', 'HIDPP_DEVICE_NAME', 'SOFTWARE_EXTRA_INFORMATION')
SwAccessiblePropertiesSizes = ('EXTENDED_MODEL_ID:1', 'KEYBOARD_LAYOUT:1', 'SERIAL_NUMBER:12', 'HIDPP_DEVICE_NAME:50', 'SOFTWARE_EXTRA_INFORMATION:16')

# Feature 0x00C2
[PRODUCT/FEATURES/COMMON/DFU_CONTROL]
Enabled = False

# Feature 0x00C3 version 0
[PRODUCT/FEATURES/COMMON/SECURE_DFU_CONTROL]
Enabled = True
Version_0 = True
DfuControlTimeout = 30
DfuControlActionType = 1
DfuControlActionData = 0x000000

# Feature 0x00D0 version 3
[PRODUCT/FEATURES/COMMON/DFU]
Enabled = True
Version_3 = True
MagicString = "RBK81_D0A"
UpgradableEntityTypes = ('0', '5')
ErrorLevel = 3
HexFileName = "norman_prod.hex"
SoftDeviceDfuFileName = "norman_s112_nrf52810_limit.dfu"
FlashWriteVerify = False
VerifyCmd3DoneAfterCmd1And2 = False
VerifyFlag = False
LowestApplicationAddress = 0x00019000
HighestApplicationAddress = 0x00033000
AdditionalAuthentication = True
EncryptCapabilities = ('3',)
CompatibleTags = ('RBK81_norman_B0008', 'RBK81_norman_B0013')

# Feature 0x1004 version 3
[PRODUCT/FEATURES/COMMON/UNIFIED_BATTERY]
Enabled = True
Version_3 = True
SupportedLevels = ('100', '50', '30', '10')
CapabilitiesFlags = ('1', '1', '0', '0')
DischargeSOCmV = ('4170', '4110', '4070', '4030', '3990', '3950', '3910', '3870', '3850', '3830', '3815', '3795', '3775', '3765', '3750', '3735', '3720', '3705', '3690', '3660', '3590')
RechargeSOCmV = ('4200', '4200', '4200', '4200', '4140', '4090', '4060', '4030', '4020', '4000', '3980', '3970', '3960', '3940', '3930', '3910', '3900', '3880', '3860', '3730', '3700')
StateOfChargeStep = 5
EnableChargingTests = True

# Feature 0x1602 version 0
[PRODUCT/FEATURES/COMMON/PASSWORD_AUTHENTICATION]
Enabled = True
Version_0 = True
# Flags - Long password = 0 ; Full authentication = 0 ; Constant credentials = 1
ConstantCredentials = True
FullAuthentication = False
SupportLongPassword = False

# Feature 0x1802 version 0
[PRODUCT/FEATURES/COMMON/DEVICE_RESET]
Enabled = True

# FW owner decided not to test 0x1803 for Norman
# Feature 0x1803 version 0 -> 1
[PRODUCT/FEATURES/COMMON/GPIO_ACCESS]
Enabled = False
# Function supports to v1 but version is 0
Version_0 = False
NumberOfPorts = 1
GpioInputMask       = ('783005FF',)
GpioInputValue      = ('102001FF',)
GpioOutputMask      = ('85CFFB00',)
GpioOutputValue     = ('00400900',)
GpioUnusedMask      = ('02000000',)
GpioForbiddenMask   = ('00000000',)

# Feature 0x1805 version 0
[PRODUCT/FEATURES/COMMON/OOB_STATE]
Enabled = True
Version_0 = True

# Feature 0x1807 version 0
[PRODUCT/FEATURES/COMMON/CONFIGURABLE_PROPERTIES]
Enabled = True
Version_0 = True
SupportedProperties = ('EXTENDED_MODEL_ID', 'KEYBOARD_LAYOUT', 'SERIAL_NUMBER', 'HIDPP_DEVICE_NAME', 'BLE_GAP_APP_NAME', 'BLE_DIS_APP_PID', 'SOFTWARE_EXTRA_INFORMATION')
SpecificPropertiesSizes = ('EXTENDED_MODEL_ID:1', 'KEYBOARD_LAYOUT:1', 'SERIAL_NUMBER:12', 'HIDPP_DEVICE_NAME:50', 'BLE_GAP_APP_NAME:14', 'BLE_DIS_APP_PID:2', 'SOFTWARE_EXTRA_INFORMATION:16')

# Feature 0x1814 version 1
[PRODUCT/FEATURES/COMMON/CHANGE_HOST]
Enabled = True
Version_1 = True

# Feature 0x1815 version 2
[PRODUCT/FEATURES/COMMON/HOSTS_INFO]
Enabled = True
Version_2 = True
SupportSetOSVersion = True
SupportSetName = True
SupportGetName = True
SupportBLEDescriptor = True
HostNameMaxLength = 24
HostBusType = 5

# Feature 0x1816 version 0
[PRODUCT/FEATURES/COMMON/BLE_PRO_PREPAIRING]
Enabled = True
Version_0 = True
KeysSupported = 0x67

# Feature 0x1830 version 0
[PRODUCT/FEATURES/COMMON/POWER_MODES]
Enabled = True
Version_0 = True
TotalNumber = 4
NumberList = '0 1 2 3'
CurrentThresholdDeepSleep = 200

# Feature 0x1861 version 1
[PRODUCT/FEATURES/COMMON/BATTERY_LEVELS_CALIBRATION]
Enabled = True
Version_1 = True
RequiredCalibrationPointNb = 2
RequiredCalibrationPoints = ('0E10', '1068')
AdcCoefficient = 0.2109

# Feature 0x1891 version 8
# TODO

# Feature 0x18A1 version 0
# TODO

# Feature 0x18B0 version 1
[PRODUCT/FEATURES/COMMON/STATIC_MONITOR_MODE]
Enabled = True
Version_1 = True
KeyboardMode = True
EnhancedKeyboardMode = True
KeyboardWithLargerMatrixMode = True
EnhancedKeyboardWithLargerMatrixMode = True

# Feature 0x1982 version 3
[PRODUCT/FEATURES/COMMON/BACKLIGHT]
Enabled = True
Version_3 = True
BacklightEffect = '00'
BacklightEffectList = '0300'
BacklightStatus = '02'
NumberOfLevel = '08'
SupportedOptions = '0D3D'
OobDurationHandsOut = 3
OobDurationHandsIn = 6
OobDurationPowered = 60

# Feature 0x1A20 version 1
# TODO

# Feature 0x1E00 version 0
[PRODUCT/FEATURES/COMMON/ENABLE_HIDDEN]
Enabled = True

# Feature 0x1E02
[PRODUCT/FEATURES/COMMON/MANAGE_DEACTIVATABLE_FEATURES_AUTH]
Enabled = True
Version_0 = True
SupportManufacturing = True
SupportCompliance = True
SupportGotthard = True
PersistentActivationManufacturing = False
PersistentActivationCompliance = False
PersistentActivationGotthard = True
AuthFeature = 0x1602

# Feature 0x1EB0 version 0
[PRODUCT/FEATURES/COMMON/TDE_ACCESS_TO_NVM]
Enabled = True
Version_0 = True
TdeMaxSize = 0x20

# Feature 0x1B04 version 5
[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS]
Enabled = True
Version_5 = True
CidCount = 21
CidListWithoutGhostKey = ('00C7', '00E6', '011C', '00E3', '010A', '000A')

[PRODUCT/FEATURES/COMMON/SPECIAL_KEYS_MSE_BUTTONS/CID_INFO_TABLE]
Enabled = True
FriendlyName                      = ('Brightness Down'         , 'Brightness Up'           , 'Backlight Down'         , 'Backlight Up'            , 'Dictation'            , 'Emoji Picker'         , 'Mute Microphone'      , 'Prev Track'           , 'Play Pause'           , 'Next Track'           , 'Mute'                 , 'Volume Down'          , 'Volume Up'            , 'Calculator'           , 'Screen Capture'       , 'Context Menu'         , 'Lock Screen'          , 'Host 1'               , 'Host 2'               , 'Host 3'               , 'Fn Lock'              ,)
Cid                               = ('0xC7'                    , '0xC8'                    , '0xE2'                   , '0xE3'                    , '0x103'                , '0x108'                , '0x11C'                , '0xE4'                 , '0xE5'                 , '0xE6'                 , '0xE7'                 , '0xE8'                 , '0xE9'                 , '0x0A'                 , '0x10A'                , '0xEA'                 , '0x6F'                 , '0xD1'                 , '0xD2'                 , '0xD3'                 , '0xDE'                 ,)
Task                              = ('0xA3'                    , '0xA4'                    , '0xC1'                   , '0xC2'                    , '0xD8'                 , '0xDD'                 , '0xF1'                 , '0x06'                 , '0x04'                 , '0x05'                 , '0x03'                 , '0x02'                 , '0x01'                 , '0x0A'                 , '0xDF'                 , '0xC3'                 , '0x44'                 , '0xAE'                 , '0xAF'                 , '0xB0'                 , '0x62'                 ,)
FlagVirtual                       = ('False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagPersist                       = ('False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagDivert                        = ('True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagReprog                        = ('True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagFnTog                         = ('True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagHotKey                        = ('False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                ,)
FlagFKey                          = ('True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
FlagMouse                         = ('False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
Pos                               = ('0x01'                    , '0x02'                    , '0x03'                   , '0x04'                    , '0x05'                 , '0x06'                 , '0x07'                 , '0x08'                 , '0x09'                 , '0x0A'                 , '0x0B'                 , '0x0C'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 ,)
Group                             = ('0x00'                    , '0x00'                    , '0x00'                   , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 ,)
GMask                             = ('0x00'                    , '0x00'                    , '0x00'                   , '0x00'                    , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 , '0x00'                 ,)
AdditionalFlagsRawWheel           = ('False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
AdditionalFlagsAnalyticsKeyEvents = ('True'                    , 'True'                    , 'True'                   , 'True'                    , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 , 'True'                 ,)
AdditionalFlagsForceRawXY         = ('False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)
AdditionalFlagsRawXY              = ('False'                   , 'False'                   , 'False'                  , 'False'                   , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                , 'False'                ,)

# Feature 0x1D4B version 0
[PRODUCT/FEATURES/COMMON/WIRELESS_DEVICE_STATUS]
Enabled = True

# Feature 0x40A3
[PRODUCT/FEATURES/KEYBOARD/FN_INVERSION_FOR_MULTI_HOST_DEVICES]
Enabled = True
Version_0 = True
FnInversionDefaultState = 1
HasFnLock = True

# Feature 0x4220 version 0
[PRODUCT/FEATURES/KEYBOARD/LOCK_KEY_STATE]
Enabled = False
Version_0 = True

# Feature 0x4521 version 0
[PRODUCT/FEATURES/KEYBOARD/DISABLE_KEYS]
Enabled = True
Version_0 = True
CapsLock = True
NumLock = True
ScrollLock = True
Windows = True
Insert = True
DefaultDisabledKeys = 0

# Feature 0x4531 version 1
[PRODUCT/FEATURES/KEYBOARD/MULTI_PLATFORM]
Enabled = True
Version_1 = True
# platform descriptor
OsMask = ('21', '32', '64', '8')
PlatformSource = ('1', '0', '0')
PlatformIndex = ('0', '255', '255')
AutoPlatform = ('0', '255', '255')
AutoDescriptor = ('0', '255', '255')
# platform info
OsDetection = True
SetHostPlatform = True

# Feature 0x4540 version 0
[PRODUCT/FEATURES/KEYBOARD/KEYBOARD_INTERNATIONAL_LAYOUTS]
Enabled = True
KeyboardLayout = 0

[RECEIVER/ENUMERATION]
Number_Of_Pairing_Slots = 06

[RECEIVER/TDE]
Enabled = False
Prepairing = False
Non_Volatile_Memory_Access_Size = 16
IRK = True
CSRK = False

[SHARED/DEVICES]
# List devices for each device dependent property
Type = ('1',)
Name = ('MX KEYS S',)
UnitIds_1 = ('2217AF59', 'BE8B3E6C', '17E250B7')
BLEProServiceVersion = ('01',)
ExtendedModelId = ('0',)
PrePairingAuthMethod = ('1',)
PasskeyAuthMethod = ('1',)
Passkey2ButtonsAuthMethod = ('0',)
AuthEntropy = ('20',)
RootFeatureVersion = ('2',)

[SHARED/DISCOVERY]
Enabled = True

[SHARED/PAIRING]
Enabled = True
BLEDevicePairing = True
PasskeyAuthenticationMethod = True
BLEProOsDetection = True
BLELatencyRemoval = True

[RUNTIME]
UsbContextClass = "pytransport.usb.logiusbcontext.logiusbcontext.LogiusbUsbContext"

[RUNTIME/DEBUGGERS]
Targets = ("Device"                , )
Types   = ("Quark256JlinkDebugger" , )

# Bug tracker SubSystem
[BUG_TRACKER]
Bug_AnalyticsKeyEvents_CID_Packing = True
Bug_PlatformChange_EventNotSent = True
Bug_BLE_GAP_Appearance_Bootloader = True
Bug_Pairing_Mode_Long_Press_Timeout_Reset = True
Bug_Platform_Source = True
Bug_User_Activity_Advertising_Twice = True
Bug_Sticky_Keys_In_Monitor_Mode_Event = True
Bug_BLE_Unsupported_Report_Map = True
Bug_Erasing_Leading_Zero = True