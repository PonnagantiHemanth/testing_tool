#!/usr/bin/env python
# -*- coding: utf-8 -*-
# ----------------------------------------------------------------------------------------------------------------------
# Python Test Box
# ----------------------------------------------------------------------------------------------------------------------
"""
:tool: This file has been generated using 'code generator tool version 1.2'
:package: pytestbox.device.hidpp20.mouse.feature_2150.business
:brief: HID++ 2.0 ``Thumbwheel`` business test suite
:author: Gautham S B <gsb@logitech.com>
:date: 2022/12/14
"""
# ----------------------------------------------------------------------------------------------------------------------
# imports
# ----------------------------------------------------------------------------------------------------------------------
from unittest import skip

from pyharness.extensions import level
from pyharness.selector import features
from pyharness.selector import services
from pytestbox.base.loghelper import LogHelper
from pytestbox.device.hidpp20.mouse.feature_2150.thumbwheel import ThumbwheelTestCase

# ----------------------------------------------------------------------------------------------------------------------
# constants
# ----------------------------------------------------------------------------------------------------------------------
_AUTHOR = "Gautham S B"


# ----------------------------------------------------------------------------------------------------------------------
# implementation
# ----------------------------------------------------------------------------------------------------------------------
class ThumbwheelBusinessTestCase(ThumbwheelTestCase):
    """
    Validate ``Thumbwheel`` business test cases
    """

    @features("Feature2150")
    @level("Business")
    @services("PowerSupply")
    @skip("Under development")
    def test_negative_delta_v_with_wheel_movement(self):
        """
        Validate reporting mode and direction reverts to initial state after Device Power Reset
        
        
        [1] GetThumbwheelStatus() -> reporting mode, inv_dir, touch, proxy
        [2] SetThumbwheelReporting(reporting mode, inv_dir)
        
        Require Power Supply
        """
        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode = 1 (Diverted) and"
                                 "inv_dir=1(inverted)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the SetThumbwheelReporting Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, reporting_mode is HID++ Divert mode (1) and"
                                  "inv_dir=1(inverted)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "send self.hardware_reset")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the GetThumbwheelStatus Response fields, reporting_mode = 0 (Native HID) and"
                                  "inv_dir=0 (default)")
        # --------------------------------------------------------------------------------------------------------------

        self.testCaseChecked("BUS_2150_0001", _AUTHOR)
    # end def test_negative_delta_v_with_wheel_movement

    @features("Feature1802")
    @features("Feature1E00")
    @features("Feature2150")
    @level("Business")
    @skip("Under development")
    def test_positive_delta_v_with_wheel_movement(self):
        """
        Validate reporting mode and direction reverts to initial state after ForceDeviceReset via 0x1802
        
        
        [1] GetThumbwheelStatus() -> reporting mode, inv_dir, touch, proxy
        [2] SetThumbwheelReporting(reporting mode, inv_dir)
        
        Require 0x1802 Device Reset
        Require 0x1E00 Enable Hidden Feature
        Require 0x1E02 Manage Deactivatable Feature
        Require 0x1602 Password Authentication
        """
        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_info(self, "Pre-requisite #2: Get feature 0x1802 index")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_info(self, "Pre-requisite #3: Get feature 0x1E00 index")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode = 1 (Diverted) and"
                                 "inv_dir=1(inverted)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the SetThumbwheelReporting Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, reporting_mode is HID++ Divert mode (1) and"
                                  "inv_dir=1(inverted)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Enable Hidden Features")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send ForceDeviceReset via 1802")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the GetThumbwheelStatus Response fields, reporting_mode = 0 (Native HID) and"
                                  "inv_dir=0 (default)")
        # --------------------------------------------------------------------------------------------------------------

        self.testCaseChecked("BUS_2150_0002", _AUTHOR)
    # end def test_positive_delta_v_with_wheel_movement

    @features("Feature1814")
    @features("Feature2150")
    @level("Business")
    @skip("Under development")
    def test_divert_reverts_to_original_state_after_change_host(self):
        """
        Validate reporting mode and direction reverts to initial state after ChangeHost(0x1814)
        """
        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_info(self, "Pre-requisite #3: Pair DUT with atleast 1 host.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode = 1 and inv_dir=1")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify SetThumbwheelReporting response fields.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check reporting_mode is Diverted(HID++) mode =1 and inv_dir=1")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send changehost request via 1814 Feature.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify change host response fields.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check reporting mode is in Native (HID only) = 0 and inv_dir=0")
        # --------------------------------------------------------------------------------------------------------------

        self.testCaseChecked("BUS_2150_0003", _AUTHOR)
    # end def test_divert_reverts_to_original_state_after_change_host

    @features("Feature2150")
    @level("Business")
    @skip("Under development")
    def test_positive_rotation_when_scrolling_right(self):
        """
        Validate the Normal mode of the Thumbwheel feature shall provide a positive 'Rotation' parameter in the
        returned thumbwheel event when scrolling right.
        
        
        [1] GetThumbwheelStatus() -> reporting mode, inv_dir, touch, proxy
        [2] SetThumbwheelReporting(reporting mode, inv_dir)
        
        Require Kosmos MainWheel
        """
        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode= 1 and inv_dir=0")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_prerequisite(self, "Pair device with at least 1 additional host.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the SetThumbwheelReporting Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, divert is HID++ Divert mode (1) and"
                                  "inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send RIGHT Wheel movement for n times.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check no notification received in HID queue")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check first ThumbwheelEvent received with rotation_status=1(start)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check rotation value is between 0x0001 to 0x7FFF (Positive Delta)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check second and subsequent ThumbwheelEvent received with rotation_status=2(active)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check rotation value is between 0x0001 to 0x7FFF (Positive Delta)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Set Wheel Movement to STILL. (no movement generated).")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check no notification received in HID queue")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check last 2 ThumbwheelEvent received with rotation_status as 3(stop) and"
                                  "0(inactive) respectively.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode= 0 and inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the setWheelMode Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, reporting_mode is HID mode (0) and"
                                  "inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        self.testCaseChecked("BUS_2150_0004", _AUTHOR)
    # end def test_positive_rotation_when_scrolling_right

    @features("Feature2150")
    @level("Business")
    @skip("Under development")
    def test_positive_delta_h_with_wheel_movement(self):
        """
        Validate the Normal mode of the Thumbwheel feature shall provide a negative 'Rotation' parameter in the
        returned thumbwheel event when scrolling left.
        
        
        [1] GetThumbwheelStatus() -> reporting mode, inv_dir, touch, proxy
        [2] SetThumbwheelReporting(reporting mode, inv_dir)
        
        Require Kosmos MainWheel
        """
        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode= 1 and inv_dir=0")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the SetThumbwheelReporting Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, divert is HID++ Divert mode (1) and"
                                  "inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send LEFT Wheel movement for n times.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check no notification received in HID queue")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check first ThumbwheelEvent received with rotation_status=1(start)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check rotation value is between 0x8001 to 0xFFFF (Negative Delta)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check second and subsequent ThumbwheelEvent received with rotation_status=2(active)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check rotation value is between 0x8001 to 0xFFFF (Negative Delta)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Set Wheel Movement to STILL. (no movement generated).")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check no notification received in HID queue")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check last 2 ThumbwheelEvent received with rotation_status as 3(stop) and"
                                  "0(inactive) respectively.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode= 0 and inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the setWheelMode Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, reporting_mode is HID mode (0) and"
                                  "inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        self.testCaseChecked("BUS_2150_0005", _AUTHOR)
    # end def test_positive_delta_h_with_wheel_movement

    @features("Feature2150")
    @level("Business")
    @skip("Under development")
    def test_negative_delta_h_with_wheel_movement(self):
        """
        Validate Normal mode Thumbwheel Rotation returns no ThumbwheelEvent
        
        
        [1] GetThumbwheelStatus() -> reporting mode, inv_dir, touch, proxy
        [2] SetThumbwheelReporting(reporting mode, inv_dir)
        
        Require Kosmos MainWheel
        """
        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode= 0 and inv_dir=0")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the SetThumbwheelReporting Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, divert is HID Native mode (0) and"
                                  "inv_dir=0(normal)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Use Kosmos Wheel Emulator set the wheel mode to LEFT")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "no ThumbwheelEvent should be received")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check AC_PAN field value in HID report is negative")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Use Kosmos Wheel Emulator set the wheel mode to RIGHT")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "no ThumbwheelEvent should be received")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check AC_PAN field value in HID report is positive")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode= 0 and inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the setWheelMode Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, reporting_mode is HID mode (0) and"
                                  "inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        self.testCaseChecked("BUS_2150_0006", _AUTHOR)
    # end def test_negative_delta_h_with_wheel_movement

    @features("Feature2150")
    @level("Business")
    @skip("Under development")
    def test_no_event_received_with_no_rotation(self):
        """
        Validate Normal mode Thumbwheel no-Rotation does not return any ThumbwheelEvent
        
        
        [1] GetThumbwheelStatus() -> reporting mode, inv_dir, touch, proxy
        [2] SetThumbwheelReporting(reporting mode, inv_dir)
        
        Require Kosmos MainWheel
        """
        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode= 1 and inv_dir=0")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the SetThumbwheelReporting Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, divert is HID++ Divert mode (1) and"
                                  "inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Set Kosmos wheel emulator to STILL")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check no notification received in HID queue")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check no ThumbwheelEvent received.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode= 0 and inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the setWheelMode Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, reporting_mode is HID mode (0) and"
                                  "inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        self.testCaseChecked("BUS_2150_0007", _AUTHOR)
    # end def test_no_event_received_with_no_rotation

    @features("Feature2150")
    @level("Business")
    @skip("Under development")
    def test_no_event_received_in_hid_event(self):
        """
        Validate the Inverted mode of the Thumbwheel feature shall provide a positive 'Rotation' parameter in the
        returned thumbwheel event when scrolling left.
        
        
        [1] GetThumbwheelStatus() -> reporting mode, inv_dir, touch, proxy
        [2] SetThumbwheelReporting(reporting mode, inv_dir)
        
        Require Kosmos MainWheel
        """
        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode= 1 and inv_dir=1")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the SetThumbwheelReporting Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, divert is HID++ Divert mode (1) and"
                                  "inv_dir=1(inverted)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send Wheel movement with LEFT 'n' times")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check no notification received in HID queue")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check first ThumbwheelEvent received with rotation_status=1(start)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check rotation value is between 0x0001 to 0x7FFF (Positive Delta)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check second and subsequent ThumbwheelEvent received with rotation_status=2(active)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check rotation value is between 0x0001 to 0x7FFF (Positive Delta).")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check nth ThumbwheelEvent received with rotation_status=3(stop)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check n+1th ThumbwheelEvent received with rotation_status=0(inactive)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode= 0 and inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the setWheelMode Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, reporting_mode is HID mode (0) and"
                                  "inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        self.testCaseChecked("BUS_2150_0008", _AUTHOR)
    # end def test_no_event_received_in_hid_event

    @features("Feature2150")
    @level("Business")
    @skip("Under development")
    def test_divert_reverts_after_force_device_reset(self):
        """
        Validate divert value of  Thumbwheel feature shall revert after device force reset

        [1] GetThumbwheelStatus() -> reporting mode, inv_dir, touch, proxy
        [2] SetThumbwheelReporting(reporting mode, inv_dir)
        
        Require Kosmos MainWheel
        """
        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode = 1 and inv_dir = 1")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the SetThumbwheelReporting Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response, reporting_mode is HID++ mode (1) and inv_dir ="
                                  "1")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Use Kosmos Wheel Emulator to Scroll RIGHT 'n' times.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check no notification received in HID Queue.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check rotation_status=1(start) and timestamp=0 for 1st ThumbwheelEvent")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check rotation_status=2(active) and timestamp>0, ThumbwheelEvent rotation is"
                                  "between 0x8001 to 0xFFFF from 2nd ThumbwheelEvent.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check nth ThumbwheelEvent rotation_status=3(stop)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check n+1 ThumbwheelEvent rotation_status=0(inactive)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode= 0 and inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the setWheelMode Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response fields, reporting_mode is HID mode (0) and"
                                  "inv_dir = 0")
        # --------------------------------------------------------------------------------------------------------------

        self.testCaseChecked("BUS_2150_0009", _AUTHOR)
    # end def test_divert_reverts_after_force_device_reset

    @features("Feature2150")
    @level("Business")
    @skip("Under development")
    def test_divert_reverts_after_hardware_reset(self):
        """
        Validate the Inverted mode of the Thumbwheel feature doesn't trigger any thumbwheel event when the wheel is
        still.
        
        [1] GetThumbwheelStatus() -> reporting mode, inv_dir, touch, proxy
        [2] SetThumbwheelReporting(reporting mode, inv_dir)
        """
        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode = 1 and inv_dir = 1")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the SetThumbwheelReporting Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Set Wheel movement to STILL")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check no rotation Notification received in HID queue.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check no ThumbwheelEvent received.")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send SetThumbwheelReporting request with reporting_mode= 0 and inv_dir=0(default)")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Verify the setWheelMode Response fields")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_step(self, "Send GetThumbwheelStatus request")
        # --------------------------------------------------------------------------------------------------------------

        # --------------------------------------------------------------------------------------------------------------
        LogHelper.log_check(self, "Check GetThumbwheelStatus response fields, reporting_mode is HID mode (0)")
        # --------------------------------------------------------------------------------------------------------------

        self.testCaseChecked("BUS_2150_0010", _AUTHOR)
    # end def test_divert_reverts_after_hardware_reset
# end class ThumbwheelBusinessTestCase

# ----------------------------------------------------------------------------------------------------------------------
# END OF FILE
# ----------------------------------------------------------------------------------------------------------------------
